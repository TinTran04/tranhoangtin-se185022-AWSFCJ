[
{
	"uri": "http://localhost:1313/workshop-template/3-blogstranslated/3.1-blog1/",
	"title": "Blog 1",
	"tags": [],
	"description": "",
	"content": "AWS wraps record-breaking week at devcom and gamescom 2025 by Jeff Harris and David Holladay on 11 SEP 2025 in Amazon API Gateway, Amazon CloudFront, Amazon GameLift, Amazon Simple Storage Service (S3), Application Services, AWS Lambda, Compute, Events, Game Development, Games, Industries, Networking \u0026amp; Content Delivery, Storage\nImpressive turnout at devcom and gamescom Impressive turnout at the devcom developer conference and gamescom this year underscored a thriving video game industry. Held in Cologne, Germany, both events reported record-breaking attendance for 2025, with developer-centric devcom receiving 5,400 visitors and consumer-focused gamescom attracting 357,000 attendees.\nThe Amazon Web Services (AWS) for Games team was out in full force, hosting insightful sessions and demos while also engaging with industry customers and partners. Continue reading for a brief recap.\nNext generation experiences took center stage At devcom, AWS illustrated how game developers can build a scalable, browser-based game streaming platform that delivers AAA games in 1080p at 60 FPS using Amazon GameLift Streams. The demo combined this new capability with AWS Lambda, Amazon API Gateway, Amazon Simple Storage Service (Amazon S3), and Amazon CloudFront. Attendees were able to see how the architecture enables secure, low-latency game streaming without requiring downloads, and can turn phones, tablets, and PCs into powerful gaming machines.\nAWS also showcased how to easily run any multiplayer game project on Amazon GameLift Servers using the new containers feature. Automating simple and fast packaging and deployment for projects with the Containers Starter Kit for Amazon GameLift, it results in faster iteration, without requiring the installation of local tools.\nAWS Partner demos included harnessing the power of AI-powered quality assurance solution Razer QA Co-AI to boost bug detection and highlighting how to support global releases without slowing down production with Phrase Platform for continuous game localization. By integrating directly with tools like Unity, Unreal Engine, GitHub, and more, it makes it easier for game developers to manage and automate translation across every content layer‚Äîfrom UI to in-game dialogue. AWS also featured AI-powered game solutions from Globant, which streamline asset operations within existing pipelines across the gaming sector, and how devtodev by Appsflyer provides deep insights into a player‚Äôs journey.\nCelebrating the achievements of women in games A highlight of the conference, AWS, Amazon Games, and EPAM Systems held the third annual Women in Games networking panel and event on Monday, August 18. The occasion celebrated the 20th anniversary of Women in Games International (WIGI), a nonprofit organization dedicated to advancing economic equality and diversity in the global games industry. A standout element of the evening included a lively panel featuring Nika Nour from Savvy Games, Saumya Singh, CEO WinZO, and Bibbi Wikman, founder of Playcap, moderated by Joanie Kraut, CEO WIGI.\nForward-thinking discussions fostered community On Tuesday, August 19, AWS hosted a pair of Community Clubhouse sessions covering generative artificial intelligence (AI) and data-driven decision making, respectively.\nModerated by AWS Global Games Industry BD Leader Shayan Sanyal, Beyond the Code: The Human Touch in AI-Driven Game Design explored the fusion of human creativity, machine learning, and simulation tools in developing unique visual styles, prototyping game systems, and inventing compelling stories. It featured Irena Pereira, Founder, CEO, and Creative Director of Unleashed Games; Kayla Comalli, CEO of Lovelace Studio; Mike Fischer, Executive Advisor of KRAFTON; and Adam Boyes, CEO and Founder of Vivrato. The discussion covered ways AI-powered workflows can accelerate content creation and system modeling, highlighting the continued importance of creative direction and world building.\nTelemetry-Driven Dev Building feedback loops for live games brought together industry veterans to dive into how data can drive better game design, team performance, and business outcomes. AWS Games Analytics and AI BD Andrei Muratov was joined by Josh Loveridge, Director of Stratton Studios, and Oscar Clark, Chief Strategy Officer of Arcanix, for an in-depth discussion on why successful games are shaped by smart, timely data. Key takeaways included day one data-driven decision making, rethinking KPIs, building ethical and sustainable teams, practical games analytics implementation, and real-world examples of how analytics informed product direction, monetization, and retention strategies.\nConclusion From game streaming and multiplayer hosting to AI integration and analytics, AWS for Games provides the tools and expertise you need to bring your gaming vision to life.\nüëâ Ready to level up your game development? Contact an AWS for Games expert today to explore how we can help accelerate your journey.\n"
},
{
	"uri": "http://localhost:1313/workshop-template/4-eventparticipated/4.1-event1/",
	"title": "Event 1",
	"tags": [],
	"description": "",
	"content": "Summary Report: ‚ÄúGenAI-powered App-DB Modernization workshop‚Äù Event Objectives Share best practices in modern application design Introduce Domain-Driven Design (DDD) and event-driven architecture Provide guidance on selecting the right compute services Present AI tools to support the development lifecycle Speakers Jignesh Shah ‚Äì Director, Open Source Databases Erica Liu ‚Äì Sr. GTM Specialist, AppMod Fabrianne Effendi ‚Äì Assc. Specialist SA, Serverless Amazon Web Services Key Highlights Identifying the drawbacks of legacy application architecture Long product release cycles ‚Üí Lost revenue/missed opportunities Inefficient operations ‚Üí Reduced productivity, higher costs Non-compliance with security regulations ‚Üí Security breaches, loss of reputation Transitioning to modern application architecture ‚Äì Microservices Migrating to a modular system ‚Äî each function is an independent service communicating via events, built on three core pillars:\nQueue Management: Handle asynchronous tasks Caching Strategy: Optimize performance Message Handling: Flexible inter-service communication Domain-Driven Design (DDD) Four-step method: Identify domain events ‚Üí arrange timeline ‚Üí identify actors ‚Üí define bounded contexts Bookstore case study: Demonstrates real-world DDD application Context mapping: 7 patterns for integrating bounded contexts Event-Driven Architecture 3 integration patterns: Publish/Subscribe, Point-to-point, Streaming Benefits: Loose coupling, scalability, resilience Sync vs async comparison: Understanding the trade-offs Compute Evolution Shared Responsibility Model: EC2 ‚Üí ECS ‚Üí Fargate ‚Üí Lambda Serverless benefits: No server management, auto-scaling, pay-for-value Functions vs Containers: Criteria for appropriate choice Amazon Q Developer SDLC automation: From planning to maintenance Code transformation: Java upgrade, .NET modernization AWS Transform agents: VMware, Mainframe, .NET migration Key Takeaways Design Mindset Business-first approach: Always start from the business domain, not the technology Ubiquitous language: Importance of a shared vocabulary between business and tech teams Bounded contexts: Identifying and managing complexity in large systems Technical Architecture Event storming technique: Practical method for modeling business processes Use event-driven communication instead of synchronous calls Integration patterns: When to use sync, async, pub/sub, streaming Compute spectrum: Criteria for choosing between VM, containers, and serverless Modernization Strategy Phased approach: No rushing ‚Äî follow a clear roadmap 7Rs framework: Multiple modernization paths depending on the application ROI measurement: Cost reduction + business agility Applying to Work Apply DDD to current projects: Event storming sessions with business teams Refactor microservices: Use bounded contexts to define service boundaries Implement event-driven patterns: Replace some sync calls with async messaging Adopt serverless: Pilot AWS Lambda for suitable use cases Try Amazon Q Developer: Integrate into the dev workflow to boost productivity Event Experience Attending the ‚ÄúGenAI-powered App-DB Modernization‚Äù workshop was extremely valuable, giving me a comprehensive view of modernizing applications and databases using advanced methods and tools. Key experiences included:\nLearning from highly skilled speakers Experts from AWS and major tech organizations shared best practices in modern application design. Through real-world case studies, I gained a deeper understanding of applying DDD and Event-Driven Architecture to large projects. Hands-on technical exposure Participating in event storming sessions helped me visualize how to model business processes into domain events. Learned how to split microservices and define bounded contexts to manage large-system complexity. Understood trade-offs between synchronous and asynchronous communication and integration patterns like pub/sub, point-to-point, streaming. Leveraging modern tools Explored Amazon Q Developer, an AI tool for SDLC support from planning to maintenance. Learned to automate code transformation and pilot serverless with AWS Lambda to improve productivity. Networking and discussions The workshop offered opportunities to exchange ideas with experts, peers, and business teams, enhancing the ubiquitous language between business and tech. Real-world examples reinforced the importance of the business-first approach rather than focusing solely on technology. Lessons learned Applying DDD and event-driven patterns reduces coupling while improving scalability and resilience. Modernization requires a phased approach with ROI measurement; rushing the process can be risky. AI tools like Amazon Q Developer can significantly boost productivity when integrated into the current workflow. Some event photos Add your event photos here\nOverall, the event not only provided technical knowledge but also helped me reshape my thinking about application design, system modernization, and cross-team collaboration.\n"
},
{
	"uri": "http://localhost:1313/workshop-template/4-eventparticipated/4.2-event2/",
	"title": "Event 2",
	"tags": [],
	"description": "",
	"content": "Summary Report: ‚ÄúGenAI-powered App-DB Modernization workshop‚Äù Event Objectives Share best practices in modern application design Introduce Domain-Driven Design (DDD) and event-driven architecture Provide guidance on selecting the right compute services Present AI tools to support the development lifecycle Speakers Jignesh Shah ‚Äì Director, Open Source Databases Erica Liu ‚Äì Sr. GTM Specialist, AppMod Fabrianne Effendi ‚Äì Assc. Specialist SA, Serverless Amazon Web Services Key Highlights Identifying the drawbacks of legacy application architecture Long product release cycles ‚Üí Lost revenue/missed opportunities Inefficient operations ‚Üí Reduced productivity, higher costs Non-compliance with security regulations ‚Üí Security breaches, loss of reputation Transitioning to modern application architecture ‚Äì Microservices Migrating to a modular system ‚Äî each function is an independent service communicating via events, built on three core pillars:\nQueue Management: Handle asynchronous tasks Caching Strategy: Optimize performance Message Handling: Flexible inter-service communication Domain-Driven Design (DDD) Four-step method: Identify domain events ‚Üí arrange timeline ‚Üí identify actors ‚Üí define bounded contexts Bookstore case study: Demonstrates real-world DDD application Context mapping: 7 patterns for integrating bounded contexts Event-Driven Architecture 3 integration patterns: Publish/Subscribe, Point-to-point, Streaming Benefits: Loose coupling, scalability, resilience Sync vs async comparison: Understanding the trade-offs Compute Evolution Shared Responsibility Model: EC2 ‚Üí ECS ‚Üí Fargate ‚Üí Lambda Serverless benefits: No server management, auto-scaling, pay-for-value Functions vs Containers: Criteria for appropriate choice Amazon Q Developer SDLC automation: From planning to maintenance Code transformation: Java upgrade, .NET modernization AWS Transform agents: VMware, Mainframe, .NET migration Key Takeaways Design Mindset Business-first approach: Always start from the business domain, not the technology Ubiquitous language: Importance of a shared vocabulary between business and tech teams Bounded contexts: Identifying and managing complexity in large systems Technical Architecture Event storming technique: Practical method for modeling business processes Use event-driven communication instead of synchronous calls Integration patterns: When to use sync, async, pub/sub, streaming Compute spectrum: Criteria for choosing between VM, containers, and serverless Modernization Strategy Phased approach: No rushing ‚Äî follow a clear roadmap 7Rs framework: Multiple modernization paths depending on the application ROI measurement: Cost reduction + business agility Applying to Work Apply DDD to current projects: Event storming sessions with business teams Refactor microservices: Use bounded contexts to define service boundaries Implement event-driven patterns: Replace some sync calls with async messaging Adopt serverless: Pilot AWS Lambda for suitable use cases Try Amazon Q Developer: Integrate into the dev workflow to boost productivity Event Experience Attending the ‚ÄúGenAI-powered App-DB Modernization‚Äù workshop was extremely valuable, giving me a comprehensive view of modernizing applications and databases using advanced methods and tools. Key experiences included:\nLearning from highly skilled speakers Experts from AWS and major tech organizations shared best practices in modern application design. Through real-world case studies, I gained a deeper understanding of applying DDD and Event-Driven Architecture to large projects. Hands-on technical exposure Participating in event storming sessions helped me visualize how to model business processes into domain events. Learned how to split microservices and define bounded contexts to manage large-system complexity. Understood trade-offs between synchronous and asynchronous communication and integration patterns like pub/sub, point-to-point, streaming. Leveraging modern tools Explored Amazon Q Developer, an AI tool for SDLC support from planning to maintenance. Learned to automate code transformation and pilot serverless with AWS Lambda to improve productivity. Networking and discussions The workshop offered opportunities to exchange ideas with experts, peers, and business teams, enhancing the ubiquitous language between business and tech. Real-world examples reinforced the importance of the business-first approach rather than focusing solely on technology. Lessons learned Applying DDD and event-driven patterns reduces coupling while improving scalability and resilience. Modernization requires a phased approach with ROI measurement; rushing the process can be risky. AI tools like Amazon Q Developer can significantly boost productivity when integrated into the current workflow. Some event photos Add your event photos here\nOverall, the event not only provided technical knowledge but also helped me reshape my thinking about application design, system modernization, and cross-team collaboration.\n"
},
{
	"uri": "http://localhost:1313/workshop-template/",
	"title": "Internship Report",
	"tags": [],
	"description": "",
	"content": "Internship Report Student Information: Full Name: Tr·∫ßn Ho√†ng T√≠n\nPhone Number: 0936091757\nEmail: tinthse185022@fpt.edu.vn\nUniversity: Ho Chi Minh City University of Technology and Education\nMajor: Information Technology\nClass: SE185022\nInternship Company: Amazon Web Services Vietnam Co., Ltd.\nInternship Position: FCJ Cloud Intern\nInternship Duration: From 12/08/2025 to 12/11/2025\nReport Content Worklog Proposal Translated Blogs Events Participated Workshop Self-evaluation Sharing and Feedback "
},
{
	"uri": "http://localhost:1313/workshop-template/1-worklog/1.1-week1/",
	"title": "Week 1 Worklog",
	"tags": [],
	"description": "",
	"content": "Week 1 Objectives: Connect and get acquainted with members of First Cloud Journey. Understand basic AWS services, how to use the console \u0026amp; CLI. Tasks to be carried out this week: Day Task Start Date Completion Date Reference Material 2 - Get acquainted with FCJ members - Read and take note of internship unit rules and regulations 08/11/2025 08/11/2025 3 - Learn about AWS and its types of services + Compute + Storage + Networking + Database + \u0026hellip; 08/12/2025 08/12/2025 https://cloudjourney.awsstudygroup.com/ 4 - Create AWS Free Tier account - Learn about AWS Console \u0026amp; AWS CLI - Practice: + Create AWS account + Install \u0026amp; configure AWS CLI + How to use AWS CLI 08/13/2025 08/13/2025 https://cloudjourney.awsstudygroup.com/ 5 - Learn basic EC2: + Instance types + AMI + EBS + \u0026hellip; - SSH connection methods to EC2 - Learn about Elastic IP 08/14/2025 08/15/2025 https://cloudjourney.awsstudygroup.com/ 6 - Practice: + Launch an EC2 instance + Connect via SSH + Attach an EBS volume 08/15/2025 08/15/2025 https://cloudjourney.awsstudygroup.com/ Week 1 Achievements: Understood what AWS is and mastered the basic service groups:\nCompute Storage Networking Database \u0026hellip; Successfully created and configured an AWS Free Tier account.\nBecame familiar with the AWS Management Console and learned how to find, access, and use services via the web interface.\nInstalled and configured AWS CLI on the computer, including:\nAccess Key Secret Key Default Region \u0026hellip; Used AWS CLI to perform basic operations such as:\nCheck account \u0026amp; configuration information Retrieve the list of regions View EC2 service Create and manage key pairs Check information about running services \u0026hellip; Acquired the ability to connect between the web interface and CLI to manage AWS resources in parallel.\n\u0026hellip;\n"
},
{
	"uri": "http://localhost:1313/workshop-template/1-worklog/1.2-week2/",
	"title": "Week 2 Worklog",
	"tags": [],
	"description": "",
	"content": "\r‚ö†Ô∏è Note: The following information is for reference purposes only. Please do not copy verbatim for your own report, including this warning.\nWeek 2 Objectives: Connect and get acquainted with members of First Cloud Journey. Understand basic AWS services, how to use the console \u0026amp; CLI. Tasks to be carried out this week: Day Task Start Date Completion Date Reference Material 2 - Get acquainted with FCJ members - Read and take note of internship unit rules and regulations 08/11/2025 08/11/2025 3 - Learn about AWS and its types of services + Compute + Storage + Networking + Database + \u0026hellip; 08/12/2025 08/12/2025 https://cloudjourney.awsstudygroup.com/ 4 - Create AWS Free Tier account - Learn about AWS Console \u0026amp; AWS CLI - Practice: + Create AWS account + Install \u0026amp; configure AWS CLI + How to use AWS CLI 08/13/2025 08/13/2025 https://cloudjourney.awsstudygroup.com/ 5 - Learn basic EC2: + Instance types + AMI + EBS + \u0026hellip; - SSH connection methods to EC2 - Learn about Elastic IP 08/14/2025 08/15/2025 https://cloudjourney.awsstudygroup.com/ 6 - Practice: + Launch an EC2 instance + Connect via SSH + Attach an EBS volume 08/15/2025 08/15/2025 https://cloudjourney.awsstudygroup.com/ Week 2 Achievements: Understood what AWS is and mastered the basic service groups:\nCompute Storage Networking Database \u0026hellip; Successfully created and configured an AWS Free Tier account.\nBecame familiar with the AWS Management Console and learned how to find, access, and use services via the web interface.\nInstalled and configured AWS CLI on the computer, including:\nAccess Key Secret Key Default Region \u0026hellip; Used AWS CLI to perform basic operations such as:\nCheck account \u0026amp; configuration information Retrieve the list of regions View EC2 service Create and manage key pairs Check information about running services \u0026hellip; Acquired the ability to connect between the web interface and CLI to manage AWS resources in parallel.\n\u0026hellip;\n"
},
{
	"uri": "http://localhost:1313/workshop-template/1-worklog/1.3-week3/",
	"title": "Week 3 Worklog",
	"tags": [],
	"description": "",
	"content": "\r‚ö†Ô∏è Note: The following information is for reference purposes only. Please do not copy verbatim for your own report, including this warning.\nWeek 3 Objectives: Connect and get acquainted with members of First Cloud Journey. Understand basic AWS services, how to use the console \u0026amp; CLI. Tasks to be carried out this week: Day Task Start Date Completion Date Reference Material 2 - Get acquainted with FCJ members - Read and take note of internship unit rules and regulations 08/11/2025 08/11/2025 3 - Learn about AWS and its types of services + Compute + Storage + Networking + Database + \u0026hellip; 08/12/2025 08/12/2025 https://cloudjourney.awsstudygroup.com/ 4 - Create AWS Free Tier account - Learn about AWS Console \u0026amp; AWS CLI - Practice: + Create AWS account + Install \u0026amp; configure AWS CLI + How to use AWS CLI 08/13/2025 08/13/2025 https://cloudjourney.awsstudygroup.com/ 5 - Learn basic EC2: + Instance types + AMI + EBS + \u0026hellip; - SSH connection methods to EC2 - Learn about Elastic IP 08/14/2025 08/15/2025 https://cloudjourney.awsstudygroup.com/ 6 - Practice: + Launch an EC2 instance + Connect via SSH + Attach an EBS volume 08/15/2025 08/15/2025 https://cloudjourney.awsstudygroup.com/ Week 3 Achievements: Understood what AWS is and mastered the basic service groups:\nCompute Storage Networking Database \u0026hellip; Successfully created and configured an AWS Free Tier account.\nBecame familiar with the AWS Management Console and learned how to find, access, and use services via the web interface.\nInstalled and configured AWS CLI on the computer, including:\nAccess Key Secret Key Default Region \u0026hellip; Used AWS CLI to perform basic operations such as:\nCheck account \u0026amp; configuration information Retrieve the list of regions View EC2 service Create and manage key pairs Check information about running services \u0026hellip; Acquired the ability to connect between the web interface and CLI to manage AWS resources in parallel.\n\u0026hellip;\n"
},
{
	"uri": "http://localhost:1313/workshop-template/1-worklog/1.4-week4/",
	"title": "Week 4 Worklog",
	"tags": [],
	"description": "",
	"content": "\r‚ö†Ô∏è Note: The following information is for reference purposes only. Please do not copy verbatim for your own report, including this warning.\nWeek 4 Objectives: Connect and get acquainted with members of First Cloud Journey. Understand basic AWS services, how to use the console \u0026amp; CLI. Tasks to be carried out this week: Day Task Start Date Completion Date Reference Material 2 - Get acquainted with FCJ members - Read and take note of internship unit rules and regulations 08/11/2025 08/11/2025 3 - Learn about AWS and its types of services + Compute + Storage + Networking + Database + \u0026hellip; 08/12/2025 08/12/2025 https://cloudjourney.awsstudygroup.com/ 4 - Create AWS Free Tier account - Learn about AWS Console \u0026amp; AWS CLI - Practice: + Create AWS account + Install \u0026amp; configure AWS CLI + How to use AWS CLI 08/13/2025 08/13/2025 https://cloudjourney.awsstudygroup.com/ 5 - Learn basic EC2: + Instance types + AMI + EBS + \u0026hellip; - SSH connection methods to EC2 - Learn about Elastic IP 08/14/2025 08/15/2025 https://cloudjourney.awsstudygroup.com/ 6 - Practice: + Launch an EC2 instance + Connect via SSH + Attach an EBS volume 08/15/2025 08/15/2025 https://cloudjourney.awsstudygroup.com/ Week 4 Achievements: Understood what AWS is and mastered the basic service groups:\nCompute Storage Networking Database \u0026hellip; Successfully created and configured an AWS Free Tier account.\nBecame familiar with the AWS Management Console and learned how to find, access, and use services via the web interface.\nInstalled and configured AWS CLI on the computer, including:\nAccess Key Secret Key Default Region \u0026hellip; Used AWS CLI to perform basic operations such as:\nCheck account \u0026amp; configuration information Retrieve the list of regions View EC2 service Create and manage key pairs Check information about running services \u0026hellip; Acquired the ability to connect between the web interface and CLI to manage AWS resources in parallel.\n\u0026hellip;\n"
},
{
	"uri": "http://localhost:1313/workshop-template/1-worklog/1.5-week5/",
	"title": "Week 5 Worklog",
	"tags": [],
	"description": "",
	"content": "\r‚ö†Ô∏è Note: The following information is for reference purposes only. Please do not copy verbatim for your own report, including this warning.\nWeek 5 Objectives: Connect and get acquainted with members of First Cloud Journey. Understand basic AWS services, how to use the console \u0026amp; CLI. Tasks to be carried out this week: Day Task Start Date Completion Date Reference Material 2 - Get acquainted with FCJ members - Read and take note of internship unit rules and regulations 08/11/2025 08/11/2025 3 - Learn about AWS and its types of services + Compute + Storage + Networking + Database + \u0026hellip; 08/12/2025 08/12/2025 https://cloudjourney.awsstudygroup.com/ 4 - Create AWS Free Tier account - Learn about AWS Console \u0026amp; AWS CLI - Practice: + Create AWS account + Install \u0026amp; configure AWS CLI + How to use AWS CLI 08/13/2025 08/13/2025 https://cloudjourney.awsstudygroup.com/ 5 - Learn basic EC2: + Instance types + AMI + EBS + \u0026hellip; - SSH connection methods to EC2 - Learn about Elastic IP 08/14/2025 08/15/2025 https://cloudjourney.awsstudygroup.com/ 6 - Practice: + Launch an EC2 instance + Connect via SSH + Attach an EBS volume 08/15/2025 08/15/2025 https://cloudjourney.awsstudygroup.com/ Week 5 Achievements: Understood what AWS is and mastered the basic service groups:\nCompute Storage Networking Database \u0026hellip; Successfully created and configured an AWS Free Tier account.\nBecame familiar with the AWS Management Console and learned how to find, access, and use services via the web interface.\nInstalled and configured AWS CLI on the computer, including:\nAccess Key Secret Key Default Region \u0026hellip; Used AWS CLI to perform basic operations such as:\nCheck account \u0026amp; configuration information Retrieve the list of regions View EC2 service Create and manage key pairs Check information about running services \u0026hellip; Acquired the ability to connect between the web interface and CLI to manage AWS resources in parallel.\n\u0026hellip;\n"
},
{
	"uri": "http://localhost:1313/workshop-template/1-worklog/1.6-week6/",
	"title": "Week 6 Worklog",
	"tags": [],
	"description": "",
	"content": "\r‚ö†Ô∏è Note: The following information is for reference purposes only. Please do not copy verbatim for your own report, including this warning.\nWeek 6 Objectives: Connect and get acquainted with members of First Cloud Journey. Understand basic AWS services, how to use the console \u0026amp; CLI. Tasks to be carried out this week: Day Task Start Date Completion Date Reference Material 2 - Get acquainted with FCJ members - Read and take note of internship unit rules and regulations 08/11/2025 08/11/2025 3 - Learn about AWS and its types of services + Compute + Storage + Networking + Database + \u0026hellip; 08/12/2025 08/12/2025 https://cloudjourney.awsstudygroup.com/ 4 - Create AWS Free Tier account - Learn about AWS Console \u0026amp; AWS CLI - Practice: + Create AWS account + Install \u0026amp; configure AWS CLI + How to use AWS CLI 08/13/2025 08/13/2025 https://cloudjourney.awsstudygroup.com/ 5 - Learn basic EC2: + Instance types + AMI + EBS + \u0026hellip; - SSH connection methods to EC2 - Learn about Elastic IP 08/14/2025 08/15/2025 https://cloudjourney.awsstudygroup.com/ 6 - Practice: + Launch an EC2 instance + Connect via SSH + Attach an EBS volume 08/15/2025 08/15/2025 https://cloudjourney.awsstudygroup.com/ Week 6 Achievements: Understood what AWS is and mastered the basic service groups:\nCompute Storage Networking Database \u0026hellip; Successfully created and configured an AWS Free Tier account.\nBecame familiar with the AWS Management Console and learned how to find, access, and use services via the web interface.\nInstalled and configured AWS CLI on the computer, including:\nAccess Key Secret Key Default Region \u0026hellip; Used AWS CLI to perform basic operations such as:\nCheck account \u0026amp; configuration information Retrieve the list of regions View EC2 service Create and manage key pairs Check information about running services \u0026hellip; Acquired the ability to connect between the web interface and CLI to manage AWS resources in parallel.\n\u0026hellip;\n"
},
{
	"uri": "http://localhost:1313/workshop-template/1-worklog/1.7-week7/",
	"title": "Week 7 Worklog",
	"tags": [],
	"description": "",
	"content": "\r‚ö†Ô∏è Note: The following information is for reference purposes only. Please do not copy verbatim for your own report, including this warning.\nWeek 7 Objectives: Connect and get acquainted with members of First Cloud Journey. Understand basic AWS services, how to use the console \u0026amp; CLI. Tasks to be carried out this week: Day Task Start Date Completion Date Reference Material 2 - Get acquainted with FCJ members - Read and take note of internship unit rules and regulations 08/11/2025 08/11/2025 3 - Learn about AWS and its types of services + Compute + Storage + Networking + Database + \u0026hellip; 08/12/2025 08/12/2025 https://cloudjourney.awsstudygroup.com/ 4 - Create AWS Free Tier account - Learn about AWS Console \u0026amp; AWS CLI - Practice: + Create AWS account + Install \u0026amp; configure AWS CLI + How to use AWS CLI 08/13/2025 08/13/2025 https://cloudjourney.awsstudygroup.com/ 5 - Learn basic EC2: + Instance types + AMI + EBS + \u0026hellip; - SSH connection methods to EC2 - Learn about Elastic IP 08/14/2025 08/15/2025 https://cloudjourney.awsstudygroup.com/ 6 - Practice: + Launch an EC2 instance + Connect via SSH + Attach an EBS volume 08/15/2025 08/15/2025 https://cloudjourney.awsstudygroup.com/ Week 7 Achievements: Understood what AWS is and mastered the basic service groups:\nCompute Storage Networking Database \u0026hellip; Successfully created and configured an AWS Free Tier account.\nBecame familiar with the AWS Management Console and learned how to find, access, and use services via the web interface.\nInstalled and configured AWS CLI on the computer, including:\nAccess Key Secret Key Default Region \u0026hellip; Used AWS CLI to perform basic operations such as:\nCheck account \u0026amp; configuration information Retrieve the list of regions View EC2 service Create and manage key pairs Check information about running services \u0026hellip; Acquired the ability to connect between the web interface and CLI to manage AWS resources in parallel.\n\u0026hellip;\n"
},
{
	"uri": "http://localhost:1313/workshop-template/1-worklog/1.8-week8/",
	"title": "Week 8 Worklog",
	"tags": [],
	"description": "",
	"content": "\r‚ö†Ô∏è Note: The following information is for reference purposes only. Please do not copy verbatim for your own report, including this warning.\nWeek 8 Objectives: Connect and get acquainted with members of First Cloud Journey. Understand basic AWS services, how to use the console \u0026amp; CLI. Tasks to be carried out this week: Day Task Start Date Completion Date Reference Material 2 - Get acquainted with FCJ members - Read and take note of internship unit rules and regulations 08/11/2025 08/11/2025 3 - Learn about AWS and its types of services + Compute + Storage + Networking + Database + \u0026hellip; 08/12/2025 08/12/2025 https://cloudjourney.awsstudygroup.com/ 4 - Create AWS Free Tier account - Learn about AWS Console \u0026amp; AWS CLI - Practice: + Create AWS account + Install \u0026amp; configure AWS CLI + How to use AWS CLI 08/13/2025 08/13/2025 https://cloudjourney.awsstudygroup.com/ 5 - Learn basic EC2: + Instance types + AMI + EBS + \u0026hellip; - SSH connection methods to EC2 - Learn about Elastic IP 08/14/2025 08/15/2025 https://cloudjourney.awsstudygroup.com/ 6 - Practice: + Launch an EC2 instance + Connect via SSH + Attach an EBS volume 08/15/2025 08/15/2025 https://cloudjourney.awsstudygroup.com/ Week 8 Achievements: Understood what AWS is and mastered the basic service groups:\nCompute Storage Networking Database \u0026hellip; Successfully created and configured an AWS Free Tier account.\nBecame familiar with the AWS Management Console and learned how to find, access, and use services via the web interface.\nInstalled and configured AWS CLI on the computer, including:\nAccess Key Secret Key Default Region \u0026hellip; Used AWS CLI to perform basic operations such as:\nCheck account \u0026amp; configuration information Retrieve the list of regions View EC2 service Create and manage key pairs Check information about running services \u0026hellip; Acquired the ability to connect between the web interface and CLI to manage AWS resources in parallel.\n\u0026hellip;\n"
},
{
	"uri": "http://localhost:1313/workshop-template/1-worklog/1.9-week9/",
	"title": "Week 9 Worklog",
	"tags": [],
	"description": "",
	"content": "\r‚ö†Ô∏è Note: The following information is for reference purposes only. Please do not copy verbatim for your own report, including this warning.\nWeek 9 Objectives: Connect and get acquainted with members of First Cloud Journey. Understand basic AWS services, how to use the console \u0026amp; CLI. Tasks to be carried out this week: Day Task Start Date Completion Date Reference Material 2 - Get acquainted with FCJ members - Read and take note of internship unit rules and regulations 08/11/2025 08/11/2025 3 - Learn about AWS and its types of services + Compute + Storage + Networking + Database + \u0026hellip; 08/12/2025 08/12/2025 https://cloudjourney.awsstudygroup.com/ 4 - Create AWS Free Tier account - Learn about AWS Console \u0026amp; AWS CLI - Practice: + Create AWS account + Install \u0026amp; configure AWS CLI + How to use AWS CLI 08/13/2025 08/13/2025 https://cloudjourney.awsstudygroup.com/ 5 - Learn basic EC2: + Instance types + AMI + EBS + \u0026hellip; - SSH connection methods to EC2 - Learn about Elastic IP 08/14/2025 08/15/2025 https://cloudjourney.awsstudygroup.com/ 6 - Practice: + Launch an EC2 instance + Connect via SSH + Attach an EBS volume 08/15/2025 08/15/2025 https://cloudjourney.awsstudygroup.com/ Week 9 Achievements: Understood what AWS is and mastered the basic service groups:\nCompute Storage Networking Database \u0026hellip; Successfully created and configured an AWS Free Tier account.\nBecame familiar with the AWS Management Console and learned how to find, access, and use services via the web interface.\nInstalled and configured AWS CLI on the computer, including:\nAccess Key Secret Key Default Region \u0026hellip; Used AWS CLI to perform basic operations such as:\nCheck account \u0026amp; configuration information Retrieve the list of regions View EC2 service Create and manage key pairs Check information about running services \u0026hellip; Acquired the ability to connect between the web interface and CLI to manage AWS resources in parallel.\n\u0026hellip;\n"
},
{
	"uri": "http://localhost:1313/workshop-template/1-worklog/",
	"title": "Worklog",
	"tags": [],
	"description": "",
	"content": "Week 1: Getting familiar with AWS and basic AWS services\nWeek 2: Doing task A\u0026hellip;\nWeek 3: Doing task B\u0026hellip;\nWeek 4: Doing task C\u0026hellip;\nWeek 5: Doing task D\u0026hellip;\nWeek 6: Doing task E\u0026hellip;\nWeek 7: Doing task G\u0026hellip;\nWeek 8: Doing task H\u0026hellip;\nWeek 9: Doing task I\u0026hellip;\nWeek 10: Doing task L\u0026hellip;\nWeek 11: Doing task M\u0026hellip;\nWeek 12: Doing task N\u0026hellip;\n"
},
{
	"uri": "http://localhost:1313/workshop-template/3-blogstranslated/3.2-blog2/",
	"title": "Blog 2",
	"tags": [],
	"description": "",
	"content": "\r‚ö†Ô∏è Note: The information below is for reference purposes only. Please do not copy verbatim for your report, including this warning.\nGetting Started with Healthcare Data Lakes: Using Microservices Data lakes can help hospitals and healthcare facilities turn data into business insights, maintain business continuity, and protect patient privacy. A data lake is a centralized, managed, and secure repository to store all your data, both in its raw and processed forms for analysis. Data lakes allow you to break down data silos and combine different types of analytics to gain insights and make better business decisions.\nThis blog post is part of a larger series on getting started with setting up a healthcare data lake. In my final post of the series, ‚ÄúGetting Started with Healthcare Data Lakes: Diving into Amazon Cognito‚Äù, I focused on the specifics of using Amazon Cognito and Attribute Based Access Control (ABAC) to authenticate and authorize users in the healthcare data lake solution. In this blog, I detail how the solution evolved at a foundational level, including the design decisions I made and the additional features used. You can access the code samples for the solution in this Git repo for reference.\nArchitecture Guidance The main change since the last presentation of the overall architecture is the decomposition of a single service into a set of smaller services to improve maintainability and flexibility. Integrating a large volume of diverse healthcare data often requires specialized connectors for each format; by keeping them encapsulated separately as microservices, we can add, remove, and modify each connector without affecting the others. The microservices are loosely coupled via publish/subscribe messaging centered in what I call the ‚Äúpub/sub hub.‚Äù\nThis solution represents what I would consider another reasonable sprint iteration from my last post. The scope is still limited to the ingestion and basic parsing of HL7v2 messages formatted in Encoding Rules 7 (ER7) through a REST interface.\nThe solution architecture is now as follows:\nFigure 1. Overall architecture; colored boxes represent distinct services.\nWhile the term microservices has some inherent ambiguity, certain traits are common:\nSmall, autonomous, loosely coupled Reusable, communicating through well-defined interfaces Specialized to do one thing well Often implemented in an event-driven architecture When determining where to draw boundaries between microservices, consider:\nIntrinsic: technology used, performance, reliability, scalability Extrinsic: dependent functionality, rate of change, reusability Human: team ownership, managing cognitive load Technology Choices and Communication Scope Communication scope Technologies / patterns to consider Within a single microservice Amazon Simple Queue Service (Amazon SQS), AWS Step Functions Between microservices in a single service AWS CloudFormation cross-stack references, Amazon Simple Notification Service (Amazon SNS) Between services Amazon EventBridge, AWS Cloud Map, Amazon API Gateway The Pub/Sub Hub Using a hub-and-spoke architecture (or message broker) works well with a small number of tightly related microservices.\nEach microservice depends only on the hub Inter-microservice connections are limited to the contents of the published message Reduces the number of synchronous calls since pub/sub is a one-way asynchronous push Drawback: coordination and monitoring are needed to avoid microservices processing the wrong message.\nCore Microservice Provides foundational data and communication layer, including:\nAmazon S3 bucket for data Amazon DynamoDB for data catalog AWS Lambda to write messages into the data lake and catalog Amazon SNS topic as the hub Amazon S3 bucket for artifacts such as Lambda code Only allow indirect write access to the data lake through a Lambda function ‚Üí ensures consistency.\nFront Door Microservice Provides an API Gateway for external REST interaction Authentication \u0026amp; authorization based on OIDC via Amazon Cognito Self-managed deduplication mechanism using DynamoDB instead of SNS FIFO because: SNS deduplication TTL is only 5 minutes SNS FIFO requires SQS FIFO Ability to proactively notify the sender that the message is a duplicate Staging ER7 Microservice Lambda ‚Äútrigger‚Äù subscribed to the pub/sub hub, filtering messages by attribute Step Functions Express Workflow to convert ER7 ‚Üí JSON Two Lambdas: Fix ER7 formatting (newline, carriage return) Parsing logic Result or error is pushed back into the pub/sub hub New Features in the Solution 1. AWS CloudFormation Cross-Stack References Example outputs in the core microservice:\nOutputs: Bucket: Value: !Ref Bucket Export: Name: !Sub ${AWS::StackName}-Bucket ArtifactBucket: Value: !Ref ArtifactBucket Export: Name: !Sub ${AWS::StackName}-ArtifactBucket Topic: Value: !Ref Topic Export: Name: !Sub ${AWS::StackName}-Topic Catalog: Value: !Ref Catalog Export: Name: !Sub ${AWS::StackName}-Catalog CatalogArn: Value: !GetAtt Catalog.Arn Export: Name: !Sub ${AWS::StackName}-CatalogArn "
},
{
	"uri": "http://localhost:1313/workshop-template/1-worklog/1.10-week10/",
	"title": "Week 10 Worklog",
	"tags": [],
	"description": "",
	"content": "\r‚ö†Ô∏è Note: The following information is for reference purposes only. Please do not copy verbatim for your own report, including this warning.\nWeek 10 Objectives: Connect and get acquainted with members of First Cloud Journey. Understand basic AWS services, how to use the console \u0026amp; CLI. Tasks to be carried out this week: Day Task Start Date Completion Date Reference Material 2 - Get acquainted with FCJ members - Read and take note of internship unit rules and regulations 08/11/2025 08/11/2025 3 - Learn about AWS and its types of services + Compute + Storage + Networking + Database + \u0026hellip; 08/12/2025 08/12/2025 https://cloudjourney.awsstudygroup.com/ 4 - Create AWS Free Tier account - Learn about AWS Console \u0026amp; AWS CLI - Practice: + Create AWS account + Install \u0026amp; configure AWS CLI + How to use AWS CLI 08/13/2025 08/13/2025 https://cloudjourney.awsstudygroup.com/ 5 - Learn basic EC2: + Instance types + AMI + EBS + \u0026hellip; - SSH connection methods to EC2 - Learn about Elastic IP 08/14/2025 08/15/2025 https://cloudjourney.awsstudygroup.com/ 6 - Practice: + Launch an EC2 instance + Connect via SSH + Attach an EBS volume 08/15/2025 08/15/2025 https://cloudjourney.awsstudygroup.com/ Week 10 Achievements: Understood what AWS is and mastered the basic service groups:\nCompute Storage Networking Database \u0026hellip; Successfully created and configured an AWS Free Tier account.\nBecame familiar with the AWS Management Console and learned how to find, access, and use services via the web interface.\nInstalled and configured AWS CLI on the computer, including:\nAccess Key Secret Key Default Region \u0026hellip; Used AWS CLI to perform basic operations such as:\nCheck account \u0026amp; configuration information Retrieve the list of regions View EC2 service Create and manage key pairs Check information about running services \u0026hellip; Acquired the ability to connect between the web interface and CLI to manage AWS resources in parallel.\n\u0026hellip;\n"
},
{
	"uri": "http://localhost:1313/workshop-template/1-worklog/1.11-week11/",
	"title": "Week 11 Worklog",
	"tags": [],
	"description": "",
	"content": "\r‚ö†Ô∏è Note: The following information is for reference purposes only. Please do not copy verbatim for your own report, including this warning.\nWeek 11 Objectives: Connect and get acquainted with members of First Cloud Journey. Understand basic AWS services, how to use the console \u0026amp; CLI. Tasks to be carried out this week: Day Task Start Date Completion Date Reference Material 2 - Get acquainted with FCJ members - Read and take note of internship unit rules and regulations 08/11/2025 08/11/2025 3 - Learn about AWS and its types of services + Compute + Storage + Networking + Database + \u0026hellip; 08/12/2025 08/12/2025 https://cloudjourney.awsstudygroup.com/ 4 - Create AWS Free Tier account - Learn about AWS Console \u0026amp; AWS CLI - Practice: + Create AWS account + Install \u0026amp; configure AWS CLI + How to use AWS CLI 08/13/2025 08/13/2025 https://cloudjourney.awsstudygroup.com/ 5 - Learn basic EC2: + Instance types + AMI + EBS + \u0026hellip; - SSH connection methods to EC2 - Learn about Elastic IP 08/14/2025 08/15/2025 https://cloudjourney.awsstudygroup.com/ 6 - Practice: + Launch an EC2 instance + Connect via SSH + Attach an EBS volume 08/15/2025 08/15/2025 https://cloudjourney.awsstudygroup.com/ Week 11 Achievements: Understood what AWS is and mastered the basic service groups:\nCompute Storage Networking Database \u0026hellip; Successfully created and configured an AWS Free Tier account.\nBecame familiar with the AWS Management Console and learned how to find, access, and use services via the web interface.\nInstalled and configured AWS CLI on the computer, including:\nAccess Key Secret Key Default Region \u0026hellip; Used AWS CLI to perform basic operations such as:\nCheck account \u0026amp; configuration information Retrieve the list of regions View EC2 service Create and manage key pairs Check information about running services \u0026hellip; Acquired the ability to connect between the web interface and CLI to manage AWS resources in parallel.\n\u0026hellip;\n"
},
{
	"uri": "http://localhost:1313/workshop-template/1-worklog/1.12-week12/",
	"title": "Week 12 Worklog",
	"tags": [],
	"description": "",
	"content": "\r‚ö†Ô∏è Note: The following information is for reference purposes only. Please do not copy verbatim for your own report, including this warning.\nWeek 12 Objectives: Connect and get acquainted with members of First Cloud Journey. Understand basic AWS services, how to use the console \u0026amp; CLI. Tasks to be carried out this week: Day Task Start Date Completion Date Reference Material 2 - Get acquainted with FCJ members - Read and take note of internship unit rules and regulations 08/11/2025 08/11/2025 3 - Learn about AWS and its types of services + Compute + Storage + Networking + Database + \u0026hellip; 08/12/2025 08/12/2025 https://cloudjourney.awsstudygroup.com/ 4 - Create AWS Free Tier account - Learn about AWS Console \u0026amp; AWS CLI - Practice: + Create AWS account + Install \u0026amp; configure AWS CLI + How to use AWS CLI 08/13/2025 08/13/2025 https://cloudjourney.awsstudygroup.com/ 5 - Learn basic EC2: + Instance types + AMI + EBS + \u0026hellip; - SSH connection methods to EC2 - Learn about Elastic IP 08/14/2025 08/15/2025 https://cloudjourney.awsstudygroup.com/ 6 - Practice: + Launch an EC2 instance + Connect via SSH + Attach an EBS volume 08/15/2025 08/15/2025 https://cloudjourney.awsstudygroup.com/ Week 12 Achievements: Understood what AWS is and mastered the basic service groups:\nCompute Storage Networking Database \u0026hellip; Successfully created and configured an AWS Free Tier account.\nBecame familiar with the AWS Management Console and learned how to find, access, and use services via the web interface.\nInstalled and configured AWS CLI on the computer, including:\nAccess Key Secret Key Default Region \u0026hellip; Used AWS CLI to perform basic operations such as:\nCheck account \u0026amp; configuration information Retrieve the list of regions View EC2 service Create and manage key pairs Check information about running services \u0026hellip; Acquired the ability to connect between the web interface and CLI to manage AWS resources in parallel.\n\u0026hellip;\n"
},
{
	"uri": "http://localhost:1313/workshop-template/2-proposal/",
	"title": "Proposal",
	"tags": [],
	"description": "",
	"content": "Team Super Beast Warrior(SBW) Batch-based Clickstream Analytics Platform 1. Executive Summary This project aims to design and implement a Batch-based Clickstream Analytics Platform for a computer and accessories e-commerce website using AWS Cloud Services. The system collects user interaction data (such as clicks, searches, and page visits) from the website and stores it in Amazon S3 as raw logs. Every hour, Amazon EventBridge triggers AWS Lambda functions to process and transform the data before loading it into a data warehouse hosted on Amazon EC2.\nThe processed data is visualized through R Shiny dashboards, providing store owners with business insights such as customer behavior patterns, product popularity, and website engagement trends.\nThis architecture focuses on batch analytics, ETL pipelines, and business intelligence while ensuring security, scalability, and cost efficiency by leveraging AWS managed services.\n2. Problem Statement What‚Äôs the Problem? E-commerce websites generate a large volume of clickstream data‚Äîincluding product views, cart actions, and search activities‚Äîthat contain valuable business insights.\nHowever, small and medium-sized stores often lack the infrastructure and expertise to collect, process, and analyze this data effectively.\nAs a result, they face difficulties in:\nUnderstanding customer purchasing behavior Identifying top-performing products Optimizing marketing campaigns and website performance Making data-driven inventory and pricing decisions The Solution This project introduces an AWS-based batch clickstream analytics system that automatically collects user interaction data from the website every hour, processes it through serverless functions, and stores it in a central data warehouse on Amazon EC2.\nThe results are visualized using R Shiny dashboards, enabling store owners to gain actionable insights into customer behavior and improve overall business performance.\nBenefits and Return on Investment Data-driven decision making: Discover customer preferences, popular products, and shopping trends. Scalable and modular design: Easily extendable to handle more users or additional data sources. Cost-efficient batch processing: Reduces continuous compute costs by operating on a scheduled, hourly basis. Business insight enablement: Empowers store owners to optimize sales strategies and improve revenue using evidence-based analytics. 3. Solution Architecture AWS Services Used Amazon Cognito: Handles user authentication and authorization for both administrators and website customers, ensuring secure access to the e-commerce platform. Amazon S3: Acts as a centralized data storage layer ‚Äî hosting the static website front-end and storing raw clickstream logs collected from user interactions. It also temporarily holds batch files before they are processed and transferred to the data warehouse. Amazon CloudFront: Distributes static website content globally with low latency, improving user experience and caching resources close to customers. Amazon API Gateway: Serves as the main entry point for incoming API calls from the website, enabling secure data submission (such as clickstream or browsing activity) into AWS. AWS Lambda: Executes serverless functions to preprocess and organize clickstream data uploaded to S3. It also handles scheduled data transformation jobs triggered by EventBridge before loading them into the data warehouse. Amazon EventBridge: Schedules and orchestrates batch workflows ‚Äî for example, triggering Lambda functions every hour to process and move clickstream data from S3 into the EC2 data warehouse. Amazon EC2 (Data Warehouse): Acts as the data warehouse environment, running PostgreSQL or another relational database for batch analytics, trend analysis, and business reporting. R Shiny (on EC2): Hosts interactive dashboards that visualize batch-processed insights, helping the business explore customer behavior, popular products, and sales opportunities. AWS IAM: Manages access permissions and policies to ensure that only authorized users and AWS components can interact with data and services. Amazon CloudWatch: Collects and monitors metrics, logs, and scheduled job statuses from Lambda and EC2 to maintain system reliability and performance visibility. Amazon SNS: Sends notifications or alerts when batch jobs complete, fail, or encounter errors, ensuring timely operational awareness. 4. Technical Implementation End-to-end data flow Auth (Cognito). Browser authenticates with Amazon Cognito (Hosted UI or JS SDK). ID token (JWT) is stored in memory; SDK attaches Authorization: Bearer \u0026lt;JWT\u0026gt; for API calls. Static web (CloudFront + S3). SPA/assets hosted on S3; CloudFront in front with OAC, gzip/brotli, HTTP/2, WAF managed rules. The page loads a tiny analytics SDK that collects events and sends to API Gateway (below). Event ingest (API Gateway). POST /v1/events (HTTP API). CORS locked to site origin; JWT authorizer validates Cognito token (or API key for anon flows). Requests forwarded to Lambda. Security \u0026amp; Ops. IAM least-privilege for every component. CloudWatch logs/metrics/alarms on API 5xx, Lambda errors, throttles, Shiny health. SNS notifies on alarms \u0026amp; DLQ growth. Processing \u0026amp; storage (Lambda ‚Üí DynamoDB(datalake) ‚Üí PostgreSQL on EC2(data warehouse)‚Üí Shiny). Lambda validates/enriches events and writes to DynamoDB (session/event tables). A small ETL job on EC2 periodically compacts/aggregates DynamoDB data into a curated store (Postgres or DuckDB) on the EC2 data-warehouse node. R Shiny Server (on EC2) reads curated tables and renders dashboards for admins. Data Contracts \u0026amp; Governance Event JSON (ingest)\n{ \u0026#34;event_id\u0026#34;: \u0026#34;uuid-v4\u0026#34;, \u0026#34;ts\u0026#34;: \u0026#34;2025-10-18T12:34:56.789Z\u0026#34;, \u0026#34;event_type\u0026#34;: \u0026#34;view|click|search|add_to_cart|checkout|purchase\u0026#34;, \u0026#34;session_id\u0026#34;: \u0026#34;uuid-v4\u0026#34;, \u0026#34;user_id\u0026#34;: \u0026#34;cognito-sub-or-null\u0026#34;, \u0026#34;anonymous_id\u0026#34;: \u0026#34;stable-anon-id\u0026#34;, \u0026#34;page_url\u0026#34;: \u0026#34;https://site/p/123\u0026#34;, \u0026#34;referrer\u0026#34;: \u0026#34;https://google.com\u0026#34;, \u0026#34;device\u0026#34;: { \u0026#34;type\u0026#34;: \u0026#34;mobile|desktop|tablet\u0026#34; }, \u0026#34;geo\u0026#34;: { \u0026#34;country\u0026#34;: \u0026#34;VN\u0026#34;, \u0026#34;city\u0026#34;: null }, \u0026#34;ecom\u0026#34;: { \u0026#34;product_id\u0026#34;: \u0026#34;sku-123\u0026#34;, \u0026#34;category\u0026#34;: \u0026#34;Shoes\u0026#34;, \u0026#34;currency\u0026#34;: \u0026#34;USD\u0026#34;, \u0026#34;price\u0026#34;: 79.99, \u0026#34;qty\u0026#34;: 1, }, \u0026#34;props\u0026#34;: { \u0026#34;search_query\u0026#34;: \u0026#34;running shoes\u0026#34; }, } PII: never send name/email/phone; any optional identifier is hashed in Lambda. Behaviour: generate anonymous_id once, maintain session_id (roll after 30 min idle), send via navigator.sendBeacon with fetch retry fallback; optional offline buffer via IndexedDB. S3 raw layout \u0026amp; retention\nBucket: s3://clickstream-raw/ Object format: NDJSON, optionally GZIP. Partitioning: year=YYYY/month=MM/day=DD/hour=HH/ ‚Üí events-\u0026lt;uuid\u0026gt;.ndjson.gz Optional manifest per batch: processed watermark, object list, record counts, hash. Lifecycle: raw ‚Üí (30 days Standard/IA) ‚Üí (365+ days Glacier/Flex). Idempotency: maintain a compact staging table in PostgreSQL (or a small S3 key-value manifest) to track last processed object/batch and prevent double-load. Frontend SDK (Static site on S3 + CloudFront) Instrumentation\nTiny JS snippet loaded site-wide (defer). Generates anonymous_id once and keeps session_id in localStorage; session rolls after 30 minutes of inactivity. Sends events via navigator.sendBeacon; fallback to fetch with retry \u0026amp; jitter. Auth context\nIf user signs in with Cognito, include user_id = idToken.sub to enable logged-in funnels. Offline durability\nOptional Service Worker queue: when offline, buffer events in IndexedDB and flush on reconnect. Ingestion API (API Gateway ‚Üí Lambda) API Gateway (HTTP API)\nRoute: POST /v1/events. JWT authorizer (Cognito user pool). For anonymous pre-login events, use an API key usage-plan with strict rate limits. WAF: AWS Managed Core + Bot Control; block non-site origins via strict CORS. Lambda (Node.js or Python)\nValidate against JSON Schema (ajv/pydantic). Idempotency: check recent event_id in a small DynamoDB table or in-memory cache w/ TTL. Enrichment: derive date/hour, parse UA, infer country from CloudFront-Viewer-Country if present. Persist: PutItem to events, UpdateItem to bump sessions.last_seen and page_count. Failure path: publish to SQS DLQ; alarm via SNS if DLQ depth \u0026gt; 0. Batch Buffer (S3) Purpose: cheap, durable buffer for batch analytics. Write pattern: small per-request objects or micro-batches (e.g., 1‚Äì5 MB each) with GZIP. Optional compactor merges into ‚â•64MB files for efficient reads. Read pattern: ETL Lambda scans only new partitions/objects since the last watermark. Schema-on-read: ETL applies schema, handles late-arriving data by reprocessing a small sliding window (e.g., last 2 hours) to correct sessions. EC2 ‚Äúdata warehouse‚Äù node Purpose: run ETL + host the curated analytical store that Shiny queries. Two choices:\nPostgres on EC2 (recommended if team prefers SQL/window functions) Instance: t3.small/t4g.small; gp3 50‚Äì100GB. Schema: fact_events, fact_sessions, dim_date, dim_product. Security: within VPC private subnet; access via ALB/SSM Session Manager; automated daily snapshots to S3 R Shiny Server on EC2 (admin analytics) Server\nEC2 (t3.small/t4g.small) with: R 4.4+, Shiny Server (open-source), Nginx reverse proxy, TLS via ACM/ALB or Let‚Äôs Encrypt. IAM instance profile (no static keys). Security group allows HTTPS from office/VPN or Cognito-gated admin site. App (packages)\nshiny, shinydashboard/bslib, plotly, DT, dplyr, DBI + RPostgres or duckdb, lubridate. If querying DynamoDB directly for small cards, use paws.dynamodb (optional). Dashboards\nTraffic \u0026amp; Engagement: DAU/MAU, sessions, avg pages, bounce proxy. Funnels: view‚Üíadd_to_cart‚Üícheckout‚Üípurchase with stage conversion \u0026amp; drop-off. Product Performance: views, CTR, ATC rate, revenue by product/category. Acquisition: referrer, campaign, device, country. Reliability: Lambda error rate, DLQ depth, ETL lag, data freshness. Caching\nQuery results cached in-process (reactive values) or materialized by ETL; cache keys by date range and filters Security baseline IAM\nIngest Lambda: s3:PutObject to raw bucket (scoped to prefix), s3:ListBucket on needed prefixes. ETL Lambda: s3:GetObject/ListBucket on raw prefixes; permission to fetch secrets from SSM Parameter Store; no broad S3 access. EC2 roles: read/write only to its own DB/volumes; optional read to S3 for backups. Shiny EC2: no write to S3 raw; read-only to Postgres as needed Network\nPlace EC2 in private subnets; public access through ALB (HTTPS 443). Lambda for ETL joins the VPC to reach Postgres; SG rules least-priv (Postgres port from ETL SG only). No wide 0.0.0.0/0 to DB ports. Data\nEncrypt EBS (KMS), S3 server-side encryption, RDS/PG TLS, secrets in SSM Parameter Store. No PII in events; retention: raw S3 90‚Äì365 days (lifecycle), curated Postgres per business policy Observability \u0026amp; alerting CloudWatch metrics/alarms\nAPI Gateway 5xx/latency, Lambda errors/throttles, DLQ depth, DynamoDB throttles, ETL job exit code/lag, Shiny health check. SNS topics: on-call email/SMS/Slack webhook.\nStructured logs: JSON logs from Lambda \u0026amp; ETL (request_id, event_type, status, ms, error_code).\nWatermark tracking: custom metric ‚ÄúDW Freshness (minutes since last successful upsert)‚Äù.\nCost Controls (stay near Free/low tier) Use HTTP API (cheaper), minimal Lambda memory (256‚Äì512MB), compress requests. Batch over realtime: S3 as buffer eliminates DynamoDB write/read costs. S3 lifecycle: Standard ‚Üí Standard-IA/Intelligent-Tiering ‚Üí Glacier for older raw; enable GZIP to cut storage/transfer. Tune ETL cadence (e.g., 15‚Äì60 min) and process only new objects; compact small files into bigger chunks to reduce read I/O. Single small EC2 for Shiny + DW at start; scale vertically or split later. AWS Budgets with SNS alerts (actual \u0026amp; forecast). Deliverables Analytics SDK (TypeScript) with sessionization + beacon + optional offline queue. API/Lambda (ingest) with validation, enrichment, idempotency hints, DLQ. S3 raw bucket spec (prefixing/partitioning, compression, lifecycle) + optional compactor. ETL Lambda (batch) + EventBridge cron + watermarking + upsert strategy to PostgreSQL. PostgreSQL schema (fact_events, fact_sessions, dims) + indexes + vacuum/maintenance plan. R Shiny dashboard app (5 modules) + Nginx/ALB TLS setup. Runbook: alarms, on-call, backups, disaster recovery, freshness SLO, cost guardrails 5. Timeline \u0026amp; Milestones Project Timeline Month 1 ‚Äì Learning \u0026amp; Preparation Study a wide range of AWS services including compute, storage, analytics, and security. Understand key concepts of cloud architecture, data pipelines, and serverless computing. Conduct team meetings to align project goals and assign responsibilities.\nMonth 2 ‚Äì Architecture Design \u0026amp; Prototyping Design the overall project architecture and define data flow between components. Set up initial AWS resources such as S3, Lambda, API Gateway, EventBridge, and EC2. Experiment with open-source tools for visualization and reporting. Test sample codes and validate the data ingestion and processing pipeline.\nMonth 3 ‚Äì Implementation \u0026amp; Testing Implement the full architecture based on the approved design. Integrate all AWS services and ensure system reliability. Conduct performance and functionality testing. Finalize documentation and prepare the project for presentation.\n6. Budget Estimation You can find the budget estimation on the AWS Pricing Calculator. Or you can download the Budget Estimation File.\nInfrastructure Costs AWS Services\nAmazon Cognito(User Pools): 0.10 USD/monthly(1 Number of monthly active users (MAU), 1 Number of monthly active users (MAU) who sign in through SAML or OIDC federation)\nAmazon S3\n3 Standard:0.17 USD/monthly(6 GB, 1,000 PUT requests, 1,000 GET requests, 6 GB Data returned, 6 GB Data scanned) Data Transfer: 0.00 USD/monthly(Outbound: 6 TB, Inbound: 6 TB) Amazon CloudFront(United States): 0.64 USD/monthly(6 GB Data transfer out to internet, 6 GB Data transfer out to origin, 10,000 requests Number of requests (HTTPS))\nAmazon API Gateway(HTTP APIs): 0.01 USD/monthly(10,000 requests for HTTP API requests units)\nAmazon Lambda(Service settings): 0.00 USD/monthly(1,000,000 requests, 512 MB)\nAmazon CloudWatch(APIs): 0.03 USD/monthly(100 metrics GetMetricData, 1,000 metrics GetMetricWidgetImage, 1,000 requests API)\nAmazon SNS(Service settings): 0.02 USD/monthly(1,000,000 requests, 100,000 calls HTTP/HTTPS Notifications, 1,000 calls EMAIL/EMAIL-JSON Notifications, 100,000,000 notifications QS Notifications, 100,000,000 deliveries Amazon Web Services Lambda, 100,000 notifications Amazon Kinesis Data Firehose)\nAmazon EC2(EC2 specifications): 1.68 USD/monthly(1 instances, 730 Compute Savings Plans)\nAmazon EventBridge: 0.00 USD/monthly(1,000,000 events(Number of AWS management events) EventBridge Event Bus - Ingestion)\nTotal: 2.65 USD/month, 31.8 USD/12 months\n7. Risk Assessment Risk Likelihood Impact Mitigation Strategy High costs exceeding the estimated budget Medium High Closely monitor and calculate all potential AWS expenses. Limit the use of high-cost AWS services and replace them with simpler, cost-effective alternatives that provide similar functionality. Potential issues during data transfer or service integration between AWS components Medium Medium Perform step-by-step validation before going live. Conduct early testing, use managed AWS services, and continuously monitor performance through Amazon CloudWatch. Data collection or processing risks (e.g., excessive user interactions, network instability, missing or duplicated events) High Medium Apply data validation, temporary buffering, and schema enforcement to ensure consistency. Use structured logging and alarms to detect and resolve ingestion errors. Low or no user adoption of the analytics dashboard Low High Conduct internal training sessions and leverage existing communication channels to raise awareness. Encourage adoption by showcasing the system‚Äôs practical benefits and actionable insights. 8. Expected Outcomes Understanding Customer Behavior and Journey The system records the entire customer journey ‚Äî including which pages users visit, which products they view, how long they stay, and where they exit the site.\nBy analyzing session duration, bounce rate, and navigation paths, businesses can evaluate user engagement and the overall experience.\nThis provides a reliable data foundation for improving website interface, optimizing page layout, and enhancing overall customer satisfaction.\nIdentifying Popular Products and Consumer Trends Based on clickstream data collected and processed in AWS, the system identifies the most viewed and most purchased products.\nProducts that receive less attention are also tracked, enabling businesses to assess the effectiveness of product listings, adjust pricing or visuals, and plan inventory more effectively.\nFurthermore, the system supports discovering shopping trends across time periods, regions, or device types ‚Äî allowing for data-driven and timely business decisions.\nOptimizing Marketing and Sales Strategies Customer behavior data is transformed into business insights and presented through Amazon QuickSight dashboards.\nWith these analytical results, businesses can:\nAccurately define target customer segments for marketing efforts Customize advertising and promotional campaigns for specific product groups or demographics Evaluate the effectiveness of marketing initiatives through measurable engagement and conversion indicators As a result, marketing and sales strategies become more evidence-based and precise, supporting better decision-making and improved business performance.\n"
},
{
	"uri": "http://localhost:1313/workshop-template/3-blogstranslated/3.3-blog3/",
	"title": "Blog 3",
	"tags": [],
	"description": "",
	"content": "\r‚ö†Ô∏è Note: The information below is for reference purposes only. Please do not copy verbatim for your report, including this warning.\nGetting Started with Healthcare Data Lakes: Using Microservices Data lakes can help hospitals and healthcare facilities turn data into business insights, maintain business continuity, and protect patient privacy. A data lake is a centralized, managed, and secure repository to store all your data, both in its raw and processed forms for analysis. Data lakes allow you to break down data silos and combine different types of analytics to gain insights and make better business decisions.\nThis blog post is part of a larger series on getting started with setting up a healthcare data lake. In my final post of the series, ‚ÄúGetting Started with Healthcare Data Lakes: Diving into Amazon Cognito‚Äù, I focused on the specifics of using Amazon Cognito and Attribute Based Access Control (ABAC) to authenticate and authorize users in the healthcare data lake solution. In this blog, I detail how the solution evolved at a foundational level, including the design decisions I made and the additional features used. You can access the code samples for the solution in this Git repo for reference.\nArchitecture Guidance The main change since the last presentation of the overall architecture is the decomposition of a single service into a set of smaller services to improve maintainability and flexibility. Integrating a large volume of diverse healthcare data often requires specialized connectors for each format; by keeping them encapsulated separately as microservices, we can add, remove, and modify each connector without affecting the others. The microservices are loosely coupled via publish/subscribe messaging centered in what I call the ‚Äúpub/sub hub.‚Äù\nThis solution represents what I would consider another reasonable sprint iteration from my last post. The scope is still limited to the ingestion and basic parsing of HL7v2 messages formatted in Encoding Rules 7 (ER7) through a REST interface.\nThe solution architecture is now as follows:\nFigure 1. Overall architecture; colored boxes represent distinct services.\nWhile the term microservices has some inherent ambiguity, certain traits are common:\nSmall, autonomous, loosely coupled Reusable, communicating through well-defined interfaces Specialized to do one thing well Often implemented in an event-driven architecture When determining where to draw boundaries between microservices, consider:\nIntrinsic: technology used, performance, reliability, scalability Extrinsic: dependent functionality, rate of change, reusability Human: team ownership, managing cognitive load Technology Choices and Communication Scope Communication scope Technologies / patterns to consider Within a single microservice Amazon Simple Queue Service (Amazon SQS), AWS Step Functions Between microservices in a single service AWS CloudFormation cross-stack references, Amazon Simple Notification Service (Amazon SNS) Between services Amazon EventBridge, AWS Cloud Map, Amazon API Gateway The Pub/Sub Hub Using a hub-and-spoke architecture (or message broker) works well with a small number of tightly related microservices.\nEach microservice depends only on the hub Inter-microservice connections are limited to the contents of the published message Reduces the number of synchronous calls since pub/sub is a one-way asynchronous push Drawback: coordination and monitoring are needed to avoid microservices processing the wrong message.\nCore Microservice Provides foundational data and communication layer, including:\nAmazon S3 bucket for data Amazon DynamoDB for data catalog AWS Lambda to write messages into the data lake and catalog Amazon SNS topic as the hub Amazon S3 bucket for artifacts such as Lambda code Only allow indirect write access to the data lake through a Lambda function ‚Üí ensures consistency.\nFront Door Microservice Provides an API Gateway for external REST interaction Authentication \u0026amp; authorization based on OIDC via Amazon Cognito Self-managed deduplication mechanism using DynamoDB instead of SNS FIFO because: SNS deduplication TTL is only 5 minutes SNS FIFO requires SQS FIFO Ability to proactively notify the sender that the message is a duplicate Staging ER7 Microservice Lambda ‚Äútrigger‚Äù subscribed to the pub/sub hub, filtering messages by attribute Step Functions Express Workflow to convert ER7 ‚Üí JSON Two Lambdas: Fix ER7 formatting (newline, carriage return) Parsing logic Result or error is pushed back into the pub/sub hub New Features in the Solution 1. AWS CloudFormation Cross-Stack References Example outputs in the core microservice:\nOutputs: Bucket: Value: !Ref Bucket Export: Name: !Sub ${AWS::StackName}-Bucket ArtifactBucket: Value: !Ref ArtifactBucket Export: Name: !Sub ${AWS::StackName}-ArtifactBucket Topic: Value: !Ref Topic Export: Name: !Sub ${AWS::StackName}-Topic Catalog: Value: !Ref Catalog Export: Name: !Sub ${AWS::StackName}-Catalog CatalogArn: Value: !GetAtt Catalog.Arn Export: Name: !Sub ${AWS::StackName}-CatalogArn "
},
{
	"uri": "http://localhost:1313/workshop-template/3-blogstranslated/",
	"title": "Translated Blogs",
	"tags": [],
	"description": "",
	"content": "Blog 1 - How iFood built a platform to run hundreds of machine learning models with Amazon SageMaker Inference This blog introduces how iFood uses Amazon SageMaker Inference to operate hundreds of machine learning models at scale. The post explains how iFood automates model training, deployment, and monitoring processes while optimizing cost and performance with features such as zero-scale endpoints and multi-model GPU serving.\nBlog 2 - How Salesforce Business Technology uses AWS Direct Connect SiteLink for reliable global connectivity This blog describes how Salesforce Business Technology implements AWS Direct Connect SiteLink to build a reliable global network architecture. The post shares how SiteLink helps Salesforce unify network connectivity across seven locations, reduce latency, enhance security, and simplify operations by leveraging the AWS global backbone.\nBlog 3 - How TCS Smart Power Plant on AWS helps utilities optimize operations and accelerate energy transformation This blog introduces how Tata Consultancy Services (TCS) deploys the Smart Power Plant on AWS, helping energy companies optimize performance, reduce emissions, and drive sustainable energy transformation. The solution uses AI/ML, IoT, and digital twin technologies to analyze real-time data, predict failures, and optimize power generation. The post also presents real-world use cases such as renewable energy forecasting, combustion optimization, and predictive maintenance, delivering economic efficiency and carbon reduction.\nBlog 4 - \u0026hellip; This blog introduces how to start building a data lake in the healthcare sector by applying a microservices architecture. You will learn why data lakes are important for storing and analyzing diverse healthcare data (electronic medical records, lab test data, medical IoT devices‚Ä¶), how microservices help make the system more flexible, scalable, and easier to maintain. The article also guides you through the steps to set up the environment, organize the data processing pipeline, and ensure compliance with security \u0026amp; privacy standards such as HIPAA.\nBlog 5 - \u0026hellip; This blog introduces how to start building a data lake in the healthcare sector by applying a microservices architecture. You will learn why data lakes are important for storing and analyzing diverse healthcare data (electronic medical records, lab test data, medical IoT devices‚Ä¶), how microservices help make the system more flexible, scalable, and easier to maintain. The article also guides you through the steps to set up the environment, organize the data processing pipeline, and ensure compliance with security \u0026amp; privacy standards such as HIPAA.\nBlog 6 - \u0026hellip; This blog introduces how to start building a data lake in the healthcare sector by applying a microservices architecture. You will learn why data lakes are important for storing and analyzing diverse healthcare data (electronic medical records, lab test data, medical IoT devices‚Ä¶), how microservices help make the system more flexible, scalable, and easier to maintain. The article also guides you through the steps to set up the environment, organize the data processing pipeline, and ensure compliance with security \u0026amp; privacy standards such as HIPAA.\n"
},
{
	"uri": "http://localhost:1313/workshop-template/3-blogstranslated/3.4-blog4/",
	"title": "Blog 4",
	"tags": [],
	"description": "",
	"content": "\r‚ö†Ô∏è Note: The information below is for reference purposes only. Please do not copy verbatim for your report, including this warning.\nGetting Started with Healthcare Data Lakes: Using Microservices Data lakes can help hospitals and healthcare facilities turn data into business insights, maintain business continuity, and protect patient privacy. A data lake is a centralized, managed, and secure repository to store all your data, both in its raw and processed forms for analysis. Data lakes allow you to break down data silos and combine different types of analytics to gain insights and make better business decisions.\nThis blog post is part of a larger series on getting started with setting up a healthcare data lake. In my final post of the series, ‚ÄúGetting Started with Healthcare Data Lakes: Diving into Amazon Cognito‚Äù, I focused on the specifics of using Amazon Cognito and Attribute Based Access Control (ABAC) to authenticate and authorize users in the healthcare data lake solution. In this blog, I detail how the solution evolved at a foundational level, including the design decisions I made and the additional features used. You can access the code samples for the solution in this Git repo for reference.\nArchitecture Guidance The main change since the last presentation of the overall architecture is the decomposition of a single service into a set of smaller services to improve maintainability and flexibility. Integrating a large volume of diverse healthcare data often requires specialized connectors for each format; by keeping them encapsulated separately as microservices, we can add, remove, and modify each connector without affecting the others. The microservices are loosely coupled via publish/subscribe messaging centered in what I call the ‚Äúpub/sub hub.‚Äù\nThis solution represents what I would consider another reasonable sprint iteration from my last post. The scope is still limited to the ingestion and basic parsing of HL7v2 messages formatted in Encoding Rules 7 (ER7) through a REST interface.\nThe solution architecture is now as follows:\nFigure 1. Overall architecture; colored boxes represent distinct services.\nWhile the term microservices has some inherent ambiguity, certain traits are common:\nSmall, autonomous, loosely coupled Reusable, communicating through well-defined interfaces Specialized to do one thing well Often implemented in an event-driven architecture When determining where to draw boundaries between microservices, consider:\nIntrinsic: technology used, performance, reliability, scalability Extrinsic: dependent functionality, rate of change, reusability Human: team ownership, managing cognitive load Technology Choices and Communication Scope Communication scope Technologies / patterns to consider Within a single microservice Amazon Simple Queue Service (Amazon SQS), AWS Step Functions Between microservices in a single service AWS CloudFormation cross-stack references, Amazon Simple Notification Service (Amazon SNS) Between services Amazon EventBridge, AWS Cloud Map, Amazon API Gateway The Pub/Sub Hub Using a hub-and-spoke architecture (or message broker) works well with a small number of tightly related microservices.\nEach microservice depends only on the hub Inter-microservice connections are limited to the contents of the published message Reduces the number of synchronous calls since pub/sub is a one-way asynchronous push Drawback: coordination and monitoring are needed to avoid microservices processing the wrong message.\nCore Microservice Provides foundational data and communication layer, including:\nAmazon S3 bucket for data Amazon DynamoDB for data catalog AWS Lambda to write messages into the data lake and catalog Amazon SNS topic as the hub Amazon S3 bucket for artifacts such as Lambda code Only allow indirect write access to the data lake through a Lambda function ‚Üí ensures consistency.\nFront Door Microservice Provides an API Gateway for external REST interaction Authentication \u0026amp; authorization based on OIDC via Amazon Cognito Self-managed deduplication mechanism using DynamoDB instead of SNS FIFO because: SNS deduplication TTL is only 5 minutes SNS FIFO requires SQS FIFO Ability to proactively notify the sender that the message is a duplicate Staging ER7 Microservice Lambda ‚Äútrigger‚Äù subscribed to the pub/sub hub, filtering messages by attribute Step Functions Express Workflow to convert ER7 ‚Üí JSON Two Lambdas: Fix ER7 formatting (newline, carriage return) Parsing logic Result or error is pushed back into the pub/sub hub New Features in the Solution 1. AWS CloudFormation Cross-Stack References Example outputs in the core microservice:\nOutputs: Bucket: Value: !Ref Bucket Export: Name: !Sub ${AWS::StackName}-Bucket ArtifactBucket: Value: !Ref ArtifactBucket Export: Name: !Sub ${AWS::StackName}-ArtifactBucket Topic: Value: !Ref Topic Export: Name: !Sub ${AWS::StackName}-Topic Catalog: Value: !Ref Catalog Export: Name: !Sub ${AWS::StackName}-Catalog CatalogArn: Value: !GetAtt Catalog.Arn Export: Name: !Sub ${AWS::StackName}-CatalogArn "
},
{
	"uri": "http://localhost:1313/workshop-template/4-eventparticipated/",
	"title": "Events Participated",
	"tags": [],
	"description": "",
	"content": "Event 1 Event Name: Vietnam Cloud Day 2025\nDate: September 18, 2025\nLocation: 2 Hai Trieu Street, Ben Nghe Ward, District 1, Ho Chi Minh City\nRole in the Event: Participant\nBrief Description of the Event and Main Activities:\nVietnam Cloud Day is an annual event organized by AWS, bringing together experts, businesses, and the tech community to share insights on emerging trends in cloud computing, AI, big data, and cybersecurity.\nThe event features in-depth discussions, hands-on technical workshops, live demonstrations of modern cloud solutions, and opportunities to network and exchange practical experiences.\nOutcomes or Achievements (Lessons Learned, New Skills, Contributions to Team/Project):\n- Gained deeper understanding of core AWS services (EC2, S3, Lambda, RDS, etc.)\n- Learned about the latest trends in AI and Cloud adoption in enterprises\n- Improved ability to learn new technologies and design systems on cloud platforms\n- Expanded professional network with engineers and experts in the Cloud Computing field\nEvent 2 Event Name: GenAI-powered App-DB Modernization workshop\nDate \u0026amp; Time: 09:00, August 13, 2025\nLocation: 26th Floor, Bitexco Tower, 02 Hai Trieu Street, Saigon Ward, Ho Chi Minh City\nRole: Attendee\n"
},
{
	"uri": "http://localhost:1313/workshop-template/3-blogstranslated/3.5-blog5/",
	"title": "Blog 5",
	"tags": [],
	"description": "",
	"content": "\r‚ö†Ô∏è Note: The information below is for reference purposes only. Please do not copy verbatim for your report, including this warning.\nGetting Started with Healthcare Data Lakes: Using Microservices Data lakes can help hospitals and healthcare facilities turn data into business insights, maintain business continuity, and protect patient privacy. A data lake is a centralized, managed, and secure repository to store all your data, both in its raw and processed forms for analysis. Data lakes allow you to break down data silos and combine different types of analytics to gain insights and make better business decisions.\nThis blog post is part of a larger series on getting started with setting up a healthcare data lake. In my final post of the series, ‚ÄúGetting Started with Healthcare Data Lakes: Diving into Amazon Cognito‚Äù, I focused on the specifics of using Amazon Cognito and Attribute Based Access Control (ABAC) to authenticate and authorize users in the healthcare data lake solution. In this blog, I detail how the solution evolved at a foundational level, including the design decisions I made and the additional features used. You can access the code samples for the solution in this Git repo for reference.\nArchitecture Guidance The main change since the last presentation of the overall architecture is the decomposition of a single service into a set of smaller services to improve maintainability and flexibility. Integrating a large volume of diverse healthcare data often requires specialized connectors for each format; by keeping them encapsulated separately as microservices, we can add, remove, and modify each connector without affecting the others. The microservices are loosely coupled via publish/subscribe messaging centered in what I call the ‚Äúpub/sub hub.‚Äù\nThis solution represents what I would consider another reasonable sprint iteration from my last post. The scope is still limited to the ingestion and basic parsing of HL7v2 messages formatted in Encoding Rules 7 (ER7) through a REST interface.\nThe solution architecture is now as follows:\nFigure 1. Overall architecture; colored boxes represent distinct services.\nWhile the term microservices has some inherent ambiguity, certain traits are common:\nSmall, autonomous, loosely coupled Reusable, communicating through well-defined interfaces Specialized to do one thing well Often implemented in an event-driven architecture When determining where to draw boundaries between microservices, consider:\nIntrinsic: technology used, performance, reliability, scalability Extrinsic: dependent functionality, rate of change, reusability Human: team ownership, managing cognitive load Technology Choices and Communication Scope Communication scope Technologies / patterns to consider Within a single microservice Amazon Simple Queue Service (Amazon SQS), AWS Step Functions Between microservices in a single service AWS CloudFormation cross-stack references, Amazon Simple Notification Service (Amazon SNS) Between services Amazon EventBridge, AWS Cloud Map, Amazon API Gateway The Pub/Sub Hub Using a hub-and-spoke architecture (or message broker) works well with a small number of tightly related microservices.\nEach microservice depends only on the hub Inter-microservice connections are limited to the contents of the published message Reduces the number of synchronous calls since pub/sub is a one-way asynchronous push Drawback: coordination and monitoring are needed to avoid microservices processing the wrong message.\nCore Microservice Provides foundational data and communication layer, including:\nAmazon S3 bucket for data Amazon DynamoDB for data catalog AWS Lambda to write messages into the data lake and catalog Amazon SNS topic as the hub Amazon S3 bucket for artifacts such as Lambda code Only allow indirect write access to the data lake through a Lambda function ‚Üí ensures consistency.\nFront Door Microservice Provides an API Gateway for external REST interaction Authentication \u0026amp; authorization based on OIDC via Amazon Cognito Self-managed deduplication mechanism using DynamoDB instead of SNS FIFO because: SNS deduplication TTL is only 5 minutes SNS FIFO requires SQS FIFO Ability to proactively notify the sender that the message is a duplicate Staging ER7 Microservice Lambda ‚Äútrigger‚Äù subscribed to the pub/sub hub, filtering messages by attribute Step Functions Express Workflow to convert ER7 ‚Üí JSON Two Lambdas: Fix ER7 formatting (newline, carriage return) Parsing logic Result or error is pushed back into the pub/sub hub New Features in the Solution 1. AWS CloudFormation Cross-Stack References Example outputs in the core microservice:\nOutputs: Bucket: Value: !Ref Bucket Export: Name: !Sub ${AWS::StackName}-Bucket ArtifactBucket: Value: !Ref ArtifactBucket Export: Name: !Sub ${AWS::StackName}-ArtifactBucket Topic: Value: !Ref Topic Export: Name: !Sub ${AWS::StackName}-Topic Catalog: Value: !Ref Catalog Export: Name: !Sub ${AWS::StackName}-Catalog CatalogArn: Value: !GetAtt Catalog.Arn Export: Name: !Sub ${AWS::StackName}-CatalogArn "
},
{
	"uri": "http://localhost:1313/workshop-template/3-blogstranslated/3.6-blog6/",
	"title": "Blog 6",
	"tags": [],
	"description": "",
	"content": "\r‚ö†Ô∏è Note: The information below is for reference purposes only. Please do not copy verbatim for your report, including this warning.\nGetting Started with Healthcare Data Lakes: Using Microservices Data lakes can help hospitals and healthcare facilities turn data into business insights, maintain business continuity, and protect patient privacy. A data lake is a centralized, managed, and secure repository to store all your data, both in its raw and processed forms for analysis. Data lakes allow you to break down data silos and combine different types of analytics to gain insights and make better business decisions.\nThis blog post is part of a larger series on getting started with setting up a healthcare data lake. In my final post of the series, ‚ÄúGetting Started with Healthcare Data Lakes: Diving into Amazon Cognito‚Äù, I focused on the specifics of using Amazon Cognito and Attribute Based Access Control (ABAC) to authenticate and authorize users in the healthcare data lake solution. In this blog, I detail how the solution evolved at a foundational level, including the design decisions I made and the additional features used. You can access the code samples for the solution in this Git repo for reference.\nArchitecture Guidance The main change since the last presentation of the overall architecture is the decomposition of a single service into a set of smaller services to improve maintainability and flexibility. Integrating a large volume of diverse healthcare data often requires specialized connectors for each format; by keeping them encapsulated separately as microservices, we can add, remove, and modify each connector without affecting the others. The microservices are loosely coupled via publish/subscribe messaging centered in what I call the ‚Äúpub/sub hub.‚Äù\nThis solution represents what I would consider another reasonable sprint iteration from my last post. The scope is still limited to the ingestion and basic parsing of HL7v2 messages formatted in Encoding Rules 7 (ER7) through a REST interface.\nThe solution architecture is now as follows:\nFigure 1. Overall architecture; colored boxes represent distinct services.\nWhile the term microservices has some inherent ambiguity, certain traits are common:\nSmall, autonomous, loosely coupled Reusable, communicating through well-defined interfaces Specialized to do one thing well Often implemented in an event-driven architecture When determining where to draw boundaries between microservices, consider:\nIntrinsic: technology used, performance, reliability, scalability Extrinsic: dependent functionality, rate of change, reusability Human: team ownership, managing cognitive load Technology Choices and Communication Scope Communication scope Technologies / patterns to consider Within a single microservice Amazon Simple Queue Service (Amazon SQS), AWS Step Functions Between microservices in a single service AWS CloudFormation cross-stack references, Amazon Simple Notification Service (Amazon SNS) Between services Amazon EventBridge, AWS Cloud Map, Amazon API Gateway The Pub/Sub Hub Using a hub-and-spoke architecture (or message broker) works well with a small number of tightly related microservices.\nEach microservice depends only on the hub Inter-microservice connections are limited to the contents of the published message Reduces the number of synchronous calls since pub/sub is a one-way asynchronous push Drawback: coordination and monitoring are needed to avoid microservices processing the wrong message.\nCore Microservice Provides foundational data and communication layer, including:\nAmazon S3 bucket for data Amazon DynamoDB for data catalog AWS Lambda to write messages into the data lake and catalog Amazon SNS topic as the hub Amazon S3 bucket for artifacts such as Lambda code Only allow indirect write access to the data lake through a Lambda function ‚Üí ensures consistency.\nFront Door Microservice Provides an API Gateway for external REST interaction Authentication \u0026amp; authorization based on OIDC via Amazon Cognito Self-managed deduplication mechanism using DynamoDB instead of SNS FIFO because: SNS deduplication TTL is only 5 minutes SNS FIFO requires SQS FIFO Ability to proactively notify the sender that the message is a duplicate Staging ER7 Microservice Lambda ‚Äútrigger‚Äù subscribed to the pub/sub hub, filtering messages by attribute Step Functions Express Workflow to convert ER7 ‚Üí JSON Two Lambdas: Fix ER7 formatting (newline, carriage return) Parsing logic Result or error is pushed back into the pub/sub hub New Features in the Solution 1. AWS CloudFormation Cross-Stack References Example outputs in the core microservice:\nOutputs: Bucket: Value: !Ref Bucket Export: Name: !Sub ${AWS::StackName}-Bucket ArtifactBucket: Value: !Ref ArtifactBucket Export: Name: !Sub ${AWS::StackName}-ArtifactBucket Topic: Value: !Ref Topic Export: Name: !Sub ${AWS::StackName}-Topic Catalog: Value: !Ref Catalog Export: Name: !Sub ${AWS::StackName}-Catalog CatalogArn: Value: !GetAtt Catalog.Arn Export: Name: !Sub ${AWS::StackName}-CatalogArn "
},
{
	"uri": "http://localhost:1313/workshop-template/6-self-evaluation/",
	"title": "Self-Assessment",
	"tags": [],
	"description": "",
	"content": "During my internship at [Amazon Web Services] from [8/9/2025] to [28/11/2025], I had the opportunity to learn, practice, and apply the knowledge acquired in school to a real-world working environment.\nI participated in [briefly describe the main project or task], through which I improved my skills in [list skills: programming, analysis, reporting, communication, etc.].\nIn terms of work ethic, I always strived to complete tasks well, complied with workplace regulations, and actively engaged with colleagues to improve work efficiency.\nTo objectively reflect on my internship period, I would like to evaluate myself based on the following criteria:\nNo. Criteria Description Good Fair Average 1 Professional knowledge \u0026amp; skills Understanding of the field, applying knowledge in practice, proficiency with tools, work quality ‚úÖ ‚òê ‚òê 2 Ability to learn Ability to absorb new knowledge and learn quickly ‚òê ‚úÖ ‚òê 3 Proactiveness Taking initiative, seeking out tasks without waiting for instructions ‚úÖ ‚òê ‚òê 4 Sense of responsibility Completing tasks on time and ensuring quality ‚úÖ ‚òê ‚òê 5 Discipline Adhering to schedules, rules, and work processes ‚òê ‚òê ‚úÖ 6 Progressive mindset Willingness to receive feedback and improve oneself ‚òê ‚úÖ ‚òê 7 Communication Presenting ideas and reporting work clearly ‚òê ‚úÖ ‚òê 8 Teamwork Working effectively with colleagues and participating in teams ‚úÖ ‚òê ‚òê 9 Professional conduct Respecting colleagues, partners, and the work environment ‚úÖ ‚òê ‚òê 10 Problem-solving skills Identifying problems, proposing solutions, and showing creativity ‚òê ‚úÖ ‚òê 11 Contribution to project/team Work effectiveness, innovative ideas, recognition from the team ‚úÖ ‚òê ‚òê 12 Overall General evaluation of the entire internship period ‚úÖ ‚òê ‚òê Needs Improvement Strengthen discipline and strictly comply with the rules and regulations of the company or any organization Improve problem-solving thinking Enhance communication skills in both daily interactions and professional contexts, including handling situations effectively "
},
{
	"uri": "http://localhost:1313/workshop-template/7-feedback/",
	"title": "Sharing and Feedback",
	"tags": [],
	"description": "",
	"content": "Overall Evaluation 1. Working Environment\nThe working environment is very friendly and open. FCJ members are always willing to help whenever I encounter difficulties, even outside working hours. The workspace is tidy and comfortable, helping me focus better. However, I think it would be nice to have more social gatherings or team bonding activities to strengthen relationships.\n2. Support from Mentor / Team Admin\nThe mentor provides very detailed guidance, explains clearly when I don‚Äôt understand, and always encourages me to ask questions. The admin team supports administrative tasks, provides necessary documents, and creates favorable conditions for me to work effectively. I especially appreciate that the mentor allows me to try and solve problems myself instead of just giving the answer.\n3. Relevance of Work to Academic Major\nThe tasks I was assigned align well with the knowledge I learned at university, while also introducing me to new areas I had never encountered before. This allowed me to both strengthen my foundational knowledge and gain practical skills.\n4. Learning \u0026amp; Skill Development Opportunities\nDuring the internship, I learned many new skills such as using project management tools, teamwork skills, and professional communication in a corporate environment. The mentor also shared valuable real-world experiences that helped me better plan my career path.\n5. Company Culture \u0026amp; Team Spirit\nThe company culture is very positive: everyone respects each other, works seriously but still keeps things enjoyable. When there are urgent projects, everyone works together and supports one another regardless of their position. This made me feel like a real part of the team, even as an intern.\n6. Internship Policies / Benefits\nThe company provides an internship allowance and offers flexible working hours when needed. In addition, having the opportunity to join internal training sessions is a big plus.\nAdditional Questions What did you find most satisfying during your internship? What do you think the company should improve for future interns? If recommending to a friend, would you suggest they intern here? Why or why not? Suggestions \u0026amp; Expectations Do you have any suggestions to improve the internship experience? Would you like to continue this program in the future? Any other comments (free sharing): "
},
{
	"uri": "http://localhost:1313/workshop-template/5-workshop/5.1-workshop-overview/",
	"title": "",
	"tags": [],
	"description": "",
	"content": "E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo \u0026mdash; | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026mdash; ) ) E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo title : \u0026ldquo;Introduction\u0026rdquo; | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo title : \u0026ldquo;Introduction\u0026rdquo; ) ) title : \u0026ldquo;Introduction\u0026rdquo;\nE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo date : \u0026ldquo;r Sys.Date()\u0026rdquo; | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo date : \u0026ldquo;r Sys.Date()\u0026rdquo; ) ) date : \u0026ldquo;r Sys.Date()\u0026rdquo;\nE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo weight : 1 | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo weight : 1 ) ) weight : 1\nE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo chapter : false | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo chapter : false ) ) chapter : false\nE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo pre : \u0026quot; 5.1. \u0026quot; | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo pre : \u0026quot; 5.1. \u0026quot; ) ) pre : \u0026quot; 5.1. \u0026quot;\nE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo \u0026mdash; | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026mdash; ) ) E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo #### VPC endpoints | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo #### VPC endpoints ) )\nVPC endpoints E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo + VPC endpoints are virtual devices. They are horizontally scaled, redundant, and highly available VPC components. They allow communication between your compute resources and AWS services without imposing availability risks. | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo + VPC endpoints are virtual devices. They are horizontally scaled, redundant, and highly available VPC components. They allow communication between your compute resources and AWS services without imposing availability risks. ) )\nVPC endpoints are virtual devices. They are horizontally scaled, redundant, and highly available VPC components. They allow communication between your compute resources and AWS services without imposing availability risks. E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo + Compute resources running in VPC can access Amazon S3 using a Gateway endpoint. PrivateLink interface endpoints can be used by compute resources running in VPC or on-premises. | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo + Compute resources running in VPC can access Amazon S3 using a Gateway endpoint. PrivateLink interface endpoints can be used by compute resources running in VPC or on-premises. ) )\nCompute resources running in VPC can access Amazon S3 using a Gateway endpoint. PrivateLink interface endpoints can be used by compute resources running in VPC or on-premises. E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo #### Workshop overview | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo #### Workshop overview ) )\nWorkshop overview E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo In this workshop, you will use two VPCs. | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo In this workshop, you will use two VPCs. ) ) In this workshop, you will use two VPCs.\nE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo + \u0026ldquo;VPC Cloud\u0026rdquo; is for cloud resources such as a Gateway endpoint and an EC2 instance to test with. | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo + \u0026ldquo;VPC Cloud\u0026rdquo; is for cloud resources such as a Gateway endpoint and an EC2 instance to test with. ) )\n\u0026ldquo;VPC Cloud\u0026rdquo; is for cloud resources such as a Gateway endpoint and an EC2 instance to test with. E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo + \u0026ldquo;VPC On-Prem\u0026rdquo; simulates an on-premises environment such as a factory or corporate datacenter. An EC2 instance running strongSwan VPN software has been deployed in \u0026ldquo;VPC On-prem\u0026rdquo; and automatically configured to establish a Site-to-Site VPN tunnel with AWS Transit Gateway. This VPN simulates connectivity from an on-premises location to the AWS cloud. To minimize costs, only one VPN instance is provisioned to support this workshop. When planning VPN connectivity for your production workloads, AWS recommends using multiple VPN devices for high availability. | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo + \u0026ldquo;VPC On-Prem\u0026rdquo; simulates an on-premises environment such as a factory or corporate datacenter. An EC2 instance running strongSwan VPN software has been deployed in \u0026ldquo;VPC On-prem\u0026rdquo; and automatically configured to establish a Site-to-Site VPN tunnel with AWS Transit Gateway. This VPN simulates connectivity from an on-premises location to the AWS cloud. To minimize costs, only one VPN instance is provisioned to support this workshop. When planning VPN connectivity for your production workloads, AWS recommends using multiple VPN devices for high availability. ) )\n\u0026ldquo;VPC On-Prem\u0026rdquo; simulates an on-premises environment such as a factory or corporate datacenter. An EC2 instance running strongSwan VPN software has been deployed in \u0026ldquo;VPC On-prem\u0026rdquo; and automatically configured to establish a Site-to-Site VPN tunnel with AWS Transit Gateway. This VPN simulates connectivity from an on-premises location to the AWS cloud. To minimize costs, only one VPN instance is provisioned to support this workshop. When planning VPN connectivity for your production workloads, AWS recommends using multiple VPN devices for high availability. E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo ) ) "
},
{
	"uri": "http://localhost:1313/workshop-template/5-workshop/5.2-prerequiste/",
	"title": "",
	"tags": [],
	"description": "",
	"content": "E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo \u0026mdash; | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026mdash; ) ) E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo title : \u0026ldquo;Prerequiste\u0026rdquo; | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo title : \u0026ldquo;Prerequiste\u0026rdquo; ) ) title : \u0026ldquo;Prerequiste\u0026rdquo;\nE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo date : \u0026ldquo;r Sys.Date()\u0026rdquo; | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo date : \u0026ldquo;r Sys.Date()\u0026rdquo; ) ) date : \u0026ldquo;r Sys.Date()\u0026rdquo;\nE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo weight : 2 | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo weight : 2 ) ) weight : 2\nE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo chapter : false | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo chapter : false ) ) chapter : false\nE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo pre : \u0026quot; 5.2. \u0026quot; | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo pre : \u0026quot; 5.2. \u0026quot; ) ) pre : \u0026quot; 5.2. \u0026quot;\nE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo \u0026mdash; | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026mdash; ) ) E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo #### IAM permissions | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo #### IAM permissions ) )\nIAM permissions E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo Add the following IAM permission policy to your user account to deploy and cleanup this workshop. | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo Add the following IAM permission policy to your user account to deploy and cleanup this workshop. ) ) Add the following IAM permission policy to your user account to deploy and cleanup this workshop.\nE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo | findstr /R \u0026quot;^date:\u0026quot; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo ) )\nE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho { | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo { ) ) {\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;Version\u0026#34;: \u0026#34;2012-10-17\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;Version\u0026#34;: \u0026#34;2012-10-17\u0026#34;, ) ) \u0026#34;Version\u0026#34;: \u0026#34;2012-10-17\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;Statement\u0026#34;: [ | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;Statement\u0026#34;: [ ) ) \u0026#34;Statement\u0026#34;: [\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho { | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo { ) ) {\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;Sid\u0026#34;: \u0026#34;VisualEditor0\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;Sid\u0026#34;: \u0026#34;VisualEditor0\u0026#34;, ) ) \u0026#34;Sid\u0026#34;: \u0026#34;VisualEditor0\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;Effect\u0026#34;: \u0026#34;Allow\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;Effect\u0026#34;: \u0026#34;Allow\u0026#34;, ) ) \u0026#34;Effect\u0026#34;: \u0026#34;Allow\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;Action\u0026#34;: [ | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;Action\u0026#34;: [ ) ) \u0026#34;Action\u0026#34;: [\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;cloudformation:*\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;cloudformation:*\u0026#34;, ) ) \u0026#34;cloudformation:*\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;cloudwatch:*\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;cloudwatch:*\u0026#34;, ) ) \u0026#34;cloudwatch:*\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;ec2:AcceptTransitGatewayPeeringAttachment\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;ec2:AcceptTransitGatewayPeeringAttachment\u0026#34;, ) ) \u0026#34;ec2:AcceptTransitGatewayPeeringAttachment\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;ec2:AcceptTransitGatewayVpcAttachment\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;ec2:AcceptTransitGatewayVpcAttachment\u0026#34;, ) ) \u0026#34;ec2:AcceptTransitGatewayVpcAttachment\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;ec2:AllocateAddress\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;ec2:AllocateAddress\u0026#34;, ) ) \u0026#34;ec2:AllocateAddress\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;ec2:AssociateAddress\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;ec2:AssociateAddress\u0026#34;, ) ) \u0026#34;ec2:AssociateAddress\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;ec2:AssociateIamInstanceProfile\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;ec2:AssociateIamInstanceProfile\u0026#34;, ) ) \u0026#34;ec2:AssociateIamInstanceProfile\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;ec2:AssociateRouteTable\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;ec2:AssociateRouteTable\u0026#34;, ) ) \u0026#34;ec2:AssociateRouteTable\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;ec2:AssociateSubnetCidrBlock\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;ec2:AssociateSubnetCidrBlock\u0026#34;, ) ) \u0026#34;ec2:AssociateSubnetCidrBlock\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;ec2:AssociateTransitGatewayRouteTable\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;ec2:AssociateTransitGatewayRouteTable\u0026#34;, ) ) \u0026#34;ec2:AssociateTransitGatewayRouteTable\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;ec2:AssociateVpcCidrBlock\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;ec2:AssociateVpcCidrBlock\u0026#34;, ) ) \u0026#34;ec2:AssociateVpcCidrBlock\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;ec2:AttachInternetGateway\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;ec2:AttachInternetGateway\u0026#34;, ) ) \u0026#34;ec2:AttachInternetGateway\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;ec2:AttachNetworkInterface\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;ec2:AttachNetworkInterface\u0026#34;, ) ) \u0026#34;ec2:AttachNetworkInterface\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;ec2:AttachVolume\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;ec2:AttachVolume\u0026#34;, ) ) \u0026#34;ec2:AttachVolume\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;ec2:AttachVpnGateway\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;ec2:AttachVpnGateway\u0026#34;, ) ) \u0026#34;ec2:AttachVpnGateway\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;ec2:AuthorizeSecurityGroupEgress\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;ec2:AuthorizeSecurityGroupEgress\u0026#34;, ) ) \u0026#34;ec2:AuthorizeSecurityGroupEgress\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;ec2:AuthorizeSecurityGroupIngress\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;ec2:AuthorizeSecurityGroupIngress\u0026#34;, ) ) \u0026#34;ec2:AuthorizeSecurityGroupIngress\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;ec2:CreateClientVpnEndpoint\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;ec2:CreateClientVpnEndpoint\u0026#34;, ) ) \u0026#34;ec2:CreateClientVpnEndpoint\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;ec2:CreateClientVpnRoute\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;ec2:CreateClientVpnRoute\u0026#34;, ) ) \u0026#34;ec2:CreateClientVpnRoute\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;ec2:CreateCustomerGateway\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;ec2:CreateCustomerGateway\u0026#34;, ) ) \u0026#34;ec2:CreateCustomerGateway\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;ec2:CreateDhcpOptions\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;ec2:CreateDhcpOptions\u0026#34;, ) ) \u0026#34;ec2:CreateDhcpOptions\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;ec2:CreateFlowLogs\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;ec2:CreateFlowLogs\u0026#34;, ) ) \u0026#34;ec2:CreateFlowLogs\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;ec2:CreateInternetGateway\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;ec2:CreateInternetGateway\u0026#34;, ) ) \u0026#34;ec2:CreateInternetGateway\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;ec2:CreateLaunchTemplate\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;ec2:CreateLaunchTemplate\u0026#34;, ) ) \u0026#34;ec2:CreateLaunchTemplate\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;ec2:CreateNetworkAcl\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;ec2:CreateNetworkAcl\u0026#34;, ) ) \u0026#34;ec2:CreateNetworkAcl\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;ec2:CreateNetworkInterface\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;ec2:CreateNetworkInterface\u0026#34;, ) ) \u0026#34;ec2:CreateNetworkInterface\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;ec2:CreateNetworkInterfacePermission\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;ec2:CreateNetworkInterfacePermission\u0026#34;, ) ) \u0026#34;ec2:CreateNetworkInterfacePermission\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;ec2:CreateRoute\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;ec2:CreateRoute\u0026#34;, ) ) \u0026#34;ec2:CreateRoute\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;ec2:CreateRouteTable\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;ec2:CreateRouteTable\u0026#34;, ) ) \u0026#34;ec2:CreateRouteTable\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;ec2:CreateSecurityGroup\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;ec2:CreateSecurityGroup\u0026#34;, ) ) \u0026#34;ec2:CreateSecurityGroup\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;ec2:CreateSubnet\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;ec2:CreateSubnet\u0026#34;, ) ) \u0026#34;ec2:CreateSubnet\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;ec2:CreateSubnetCidrReservation\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;ec2:CreateSubnetCidrReservation\u0026#34;, ) ) \u0026#34;ec2:CreateSubnetCidrReservation\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;ec2:CreateTags\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;ec2:CreateTags\u0026#34;, ) ) \u0026#34;ec2:CreateTags\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;ec2:CreateTransitGateway\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;ec2:CreateTransitGateway\u0026#34;, ) ) \u0026#34;ec2:CreateTransitGateway\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;ec2:CreateTransitGatewayPeeringAttachment\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;ec2:CreateTransitGatewayPeeringAttachment\u0026#34;, ) ) \u0026#34;ec2:CreateTransitGatewayPeeringAttachment\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;ec2:CreateTransitGatewayPrefixListReference\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;ec2:CreateTransitGatewayPrefixListReference\u0026#34;, ) ) \u0026#34;ec2:CreateTransitGatewayPrefixListReference\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;ec2:CreateTransitGatewayRoute\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;ec2:CreateTransitGatewayRoute\u0026#34;, ) ) \u0026#34;ec2:CreateTransitGatewayRoute\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;ec2:CreateTransitGatewayRouteTable\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;ec2:CreateTransitGatewayRouteTable\u0026#34;, ) ) \u0026#34;ec2:CreateTransitGatewayRouteTable\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;ec2:CreateTransitGatewayVpcAttachment\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;ec2:CreateTransitGatewayVpcAttachment\u0026#34;, ) ) \u0026#34;ec2:CreateTransitGatewayVpcAttachment\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;ec2:CreateVpc\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;ec2:CreateVpc\u0026#34;, ) ) \u0026#34;ec2:CreateVpc\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;ec2:CreateVpcEndpoint\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;ec2:CreateVpcEndpoint\u0026#34;, ) ) \u0026#34;ec2:CreateVpcEndpoint\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;ec2:CreateVpcEndpointConnectionNotification\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;ec2:CreateVpcEndpointConnectionNotification\u0026#34;, ) ) \u0026#34;ec2:CreateVpcEndpointConnectionNotification\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;ec2:CreateVpcEndpointServiceConfiguration\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;ec2:CreateVpcEndpointServiceConfiguration\u0026#34;, ) ) \u0026#34;ec2:CreateVpcEndpointServiceConfiguration\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;ec2:CreateVpnConnection\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;ec2:CreateVpnConnection\u0026#34;, ) ) \u0026#34;ec2:CreateVpnConnection\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;ec2:CreateVpnConnectionRoute\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;ec2:CreateVpnConnectionRoute\u0026#34;, ) ) \u0026#34;ec2:CreateVpnConnectionRoute\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;ec2:CreateVpnGateway\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;ec2:CreateVpnGateway\u0026#34;, ) ) \u0026#34;ec2:CreateVpnGateway\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;ec2:DeleteCustomerGateway\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;ec2:DeleteCustomerGateway\u0026#34;, ) ) \u0026#34;ec2:DeleteCustomerGateway\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;ec2:DeleteFlowLogs\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;ec2:DeleteFlowLogs\u0026#34;, ) ) \u0026#34;ec2:DeleteFlowLogs\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;ec2:DeleteInternetGateway\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;ec2:DeleteInternetGateway\u0026#34;, ) ) \u0026#34;ec2:DeleteInternetGateway\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;ec2:DeleteNetworkInterface\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;ec2:DeleteNetworkInterface\u0026#34;, ) ) \u0026#34;ec2:DeleteNetworkInterface\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;ec2:DeleteNetworkInterfacePermission\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;ec2:DeleteNetworkInterfacePermission\u0026#34;, ) ) \u0026#34;ec2:DeleteNetworkInterfacePermission\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;ec2:DeleteRoute\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;ec2:DeleteRoute\u0026#34;, ) ) \u0026#34;ec2:DeleteRoute\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;ec2:DeleteRouteTable\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;ec2:DeleteRouteTable\u0026#34;, ) ) \u0026#34;ec2:DeleteRouteTable\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;ec2:DeleteSecurityGroup\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;ec2:DeleteSecurityGroup\u0026#34;, ) ) \u0026#34;ec2:DeleteSecurityGroup\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;ec2:DeleteSubnet\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;ec2:DeleteSubnet\u0026#34;, ) ) \u0026#34;ec2:DeleteSubnet\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;ec2:DeleteSubnetCidrReservation\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;ec2:DeleteSubnetCidrReservation\u0026#34;, ) ) \u0026#34;ec2:DeleteSubnetCidrReservation\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;ec2:DeleteTags\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;ec2:DeleteTags\u0026#34;, ) ) \u0026#34;ec2:DeleteTags\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;ec2:DeleteTransitGateway\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;ec2:DeleteTransitGateway\u0026#34;, ) ) \u0026#34;ec2:DeleteTransitGateway\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;ec2:DeleteTransitGatewayPeeringAttachment\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;ec2:DeleteTransitGatewayPeeringAttachment\u0026#34;, ) ) \u0026#34;ec2:DeleteTransitGatewayPeeringAttachment\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;ec2:DeleteTransitGatewayPrefixListReference\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;ec2:DeleteTransitGatewayPrefixListReference\u0026#34;, ) ) \u0026#34;ec2:DeleteTransitGatewayPrefixListReference\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;ec2:DeleteTransitGatewayRoute\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;ec2:DeleteTransitGatewayRoute\u0026#34;, ) ) \u0026#34;ec2:DeleteTransitGatewayRoute\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;ec2:DeleteTransitGatewayRouteTable\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;ec2:DeleteTransitGatewayRouteTable\u0026#34;, ) ) \u0026#34;ec2:DeleteTransitGatewayRouteTable\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;ec2:DeleteTransitGatewayVpcAttachment\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;ec2:DeleteTransitGatewayVpcAttachment\u0026#34;, ) ) \u0026#34;ec2:DeleteTransitGatewayVpcAttachment\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;ec2:DeleteVpc\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;ec2:DeleteVpc\u0026#34;, ) ) \u0026#34;ec2:DeleteVpc\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;ec2:DeleteVpcEndpoints\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;ec2:DeleteVpcEndpoints\u0026#34;, ) ) \u0026#34;ec2:DeleteVpcEndpoints\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;ec2:DeleteVpcEndpointServiceConfigurations\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;ec2:DeleteVpcEndpointServiceConfigurations\u0026#34;, ) ) \u0026#34;ec2:DeleteVpcEndpointServiceConfigurations\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;ec2:DeleteVpnConnection\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;ec2:DeleteVpnConnection\u0026#34;, ) ) \u0026#34;ec2:DeleteVpnConnection\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;ec2:DeleteVpnConnectionRoute\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;ec2:DeleteVpnConnectionRoute\u0026#34;, ) ) \u0026#34;ec2:DeleteVpnConnectionRoute\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;ec2:Describe*\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;ec2:Describe*\u0026#34;, ) ) \u0026#34;ec2:Describe*\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;ec2:DetachInternetGateway\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;ec2:DetachInternetGateway\u0026#34;, ) ) \u0026#34;ec2:DetachInternetGateway\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;ec2:DisassociateAddress\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;ec2:DisassociateAddress\u0026#34;, ) ) \u0026#34;ec2:DisassociateAddress\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;ec2:DisassociateRouteTable\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;ec2:DisassociateRouteTable\u0026#34;, ) ) \u0026#34;ec2:DisassociateRouteTable\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;ec2:GetLaunchTemplateData\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;ec2:GetLaunchTemplateData\u0026#34;, ) ) \u0026#34;ec2:GetLaunchTemplateData\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;ec2:GetTransitGatewayAttachmentPropagations\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;ec2:GetTransitGatewayAttachmentPropagations\u0026#34;, ) ) \u0026#34;ec2:GetTransitGatewayAttachmentPropagations\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;ec2:ModifyInstanceAttribute\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;ec2:ModifyInstanceAttribute\u0026#34;, ) ) \u0026#34;ec2:ModifyInstanceAttribute\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;ec2:ModifySecurityGroupRules\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;ec2:ModifySecurityGroupRules\u0026#34;, ) ) \u0026#34;ec2:ModifySecurityGroupRules\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;ec2:ModifyTransitGatewayVpcAttachment\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;ec2:ModifyTransitGatewayVpcAttachment\u0026#34;, ) ) \u0026#34;ec2:ModifyTransitGatewayVpcAttachment\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;ec2:ModifyVpcAttribute\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;ec2:ModifyVpcAttribute\u0026#34;, ) ) \u0026#34;ec2:ModifyVpcAttribute\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;ec2:ModifyVpcEndpoint\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;ec2:ModifyVpcEndpoint\u0026#34;, ) ) \u0026#34;ec2:ModifyVpcEndpoint\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;ec2:ReleaseAddress\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;ec2:ReleaseAddress\u0026#34;, ) ) \u0026#34;ec2:ReleaseAddress\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;ec2:ReplaceRoute\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;ec2:ReplaceRoute\u0026#34;, ) ) \u0026#34;ec2:ReplaceRoute\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;ec2:RevokeSecurityGroupEgress\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;ec2:RevokeSecurityGroupEgress\u0026#34;, ) ) \u0026#34;ec2:RevokeSecurityGroupEgress\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;ec2:RevokeSecurityGroupIngress\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;ec2:RevokeSecurityGroupIngress\u0026#34;, ) ) \u0026#34;ec2:RevokeSecurityGroupIngress\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;ec2:RunInstances\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;ec2:RunInstances\u0026#34;, ) ) \u0026#34;ec2:RunInstances\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;ec2:StartInstances\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;ec2:StartInstances\u0026#34;, ) ) \u0026#34;ec2:StartInstances\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;ec2:StopInstances\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;ec2:StopInstances\u0026#34;, ) ) \u0026#34;ec2:StopInstances\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;ec2:UpdateSecurityGroupRuleDescriptionsEgress\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;ec2:UpdateSecurityGroupRuleDescriptionsEgress\u0026#34;, ) ) \u0026#34;ec2:UpdateSecurityGroupRuleDescriptionsEgress\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;ec2:UpdateSecurityGroupRuleDescriptionsIngress\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;ec2:UpdateSecurityGroupRuleDescriptionsIngress\u0026#34;, ) ) \u0026#34;ec2:UpdateSecurityGroupRuleDescriptionsIngress\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;iam:AddRoleToInstanceProfile\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;iam:AddRoleToInstanceProfile\u0026#34;, ) ) \u0026#34;iam:AddRoleToInstanceProfile\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;iam:AttachRolePolicy\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;iam:AttachRolePolicy\u0026#34;, ) ) \u0026#34;iam:AttachRolePolicy\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;iam:CreateInstanceProfile\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;iam:CreateInstanceProfile\u0026#34;, ) ) \u0026#34;iam:CreateInstanceProfile\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;iam:CreatePolicy\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;iam:CreatePolicy\u0026#34;, ) ) \u0026#34;iam:CreatePolicy\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;iam:CreateRole\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;iam:CreateRole\u0026#34;, ) ) \u0026#34;iam:CreateRole\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;iam:DeleteInstanceProfile\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;iam:DeleteInstanceProfile\u0026#34;, ) ) \u0026#34;iam:DeleteInstanceProfile\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;iam:DeletePolicy\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;iam:DeletePolicy\u0026#34;, ) ) \u0026#34;iam:DeletePolicy\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;iam:DeleteRole\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;iam:DeleteRole\u0026#34;, ) ) \u0026#34;iam:DeleteRole\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;iam:DeleteRolePolicy\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;iam:DeleteRolePolicy\u0026#34;, ) ) \u0026#34;iam:DeleteRolePolicy\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;iam:DetachRolePolicy\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;iam:DetachRolePolicy\u0026#34;, ) ) \u0026#34;iam:DetachRolePolicy\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;iam:GetInstanceProfile\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;iam:GetInstanceProfile\u0026#34;, ) ) \u0026#34;iam:GetInstanceProfile\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;iam:GetPolicy\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;iam:GetPolicy\u0026#34;, ) ) \u0026#34;iam:GetPolicy\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;iam:GetRole\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;iam:GetRole\u0026#34;, ) ) \u0026#34;iam:GetRole\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;iam:GetRolePolicy\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;iam:GetRolePolicy\u0026#34;, ) ) \u0026#34;iam:GetRolePolicy\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;iam:ListPolicyVersions\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;iam:ListPolicyVersions\u0026#34;, ) ) \u0026#34;iam:ListPolicyVersions\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;iam:ListRoles\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;iam:ListRoles\u0026#34;, ) ) \u0026#34;iam:ListRoles\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;iam:PassRole\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;iam:PassRole\u0026#34;, ) ) \u0026#34;iam:PassRole\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;iam:PutRolePolicy\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;iam:PutRolePolicy\u0026#34;, ) ) \u0026#34;iam:PutRolePolicy\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;iam:RemoveRoleFromInstanceProfile\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;iam:RemoveRoleFromInstanceProfile\u0026#34;, ) ) \u0026#34;iam:RemoveRoleFromInstanceProfile\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;lambda:CreateFunction\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;lambda:CreateFunction\u0026#34;, ) ) \u0026#34;lambda:CreateFunction\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;lambda:DeleteFunction\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;lambda:DeleteFunction\u0026#34;, ) ) \u0026#34;lambda:DeleteFunction\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;lambda:DeleteLayerVersion\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;lambda:DeleteLayerVersion\u0026#34;, ) ) \u0026#34;lambda:DeleteLayerVersion\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;lambda:GetFunction\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;lambda:GetFunction\u0026#34;, ) ) \u0026#34;lambda:GetFunction\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;lambda:GetLayerVersion\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;lambda:GetLayerVersion\u0026#34;, ) ) \u0026#34;lambda:GetLayerVersion\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;lambda:InvokeFunction\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;lambda:InvokeFunction\u0026#34;, ) ) \u0026#34;lambda:InvokeFunction\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;lambda:PublishLayerVersion\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;lambda:PublishLayerVersion\u0026#34;, ) ) \u0026#34;lambda:PublishLayerVersion\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;logs:CreateLogGroup\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;logs:CreateLogGroup\u0026#34;, ) ) \u0026#34;logs:CreateLogGroup\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;logs:DeleteLogGroup\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;logs:DeleteLogGroup\u0026#34;, ) ) \u0026#34;logs:DeleteLogGroup\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;logs:DescribeLogGroups\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;logs:DescribeLogGroups\u0026#34;, ) ) \u0026#34;logs:DescribeLogGroups\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;logs:PutRetentionPolicy\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;logs:PutRetentionPolicy\u0026#34;, ) ) \u0026#34;logs:PutRetentionPolicy\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;route53:ChangeTagsForResource\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;route53:ChangeTagsForResource\u0026#34;, ) ) \u0026#34;route53:ChangeTagsForResource\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;route53:CreateHealthCheck\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;route53:CreateHealthCheck\u0026#34;, ) ) \u0026#34;route53:CreateHealthCheck\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;route53:CreateHostedZone\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;route53:CreateHostedZone\u0026#34;, ) ) \u0026#34;route53:CreateHostedZone\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;route53:CreateTrafficPolicy\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;route53:CreateTrafficPolicy\u0026#34;, ) ) \u0026#34;route53:CreateTrafficPolicy\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;route53:DeleteHostedZone\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;route53:DeleteHostedZone\u0026#34;, ) ) \u0026#34;route53:DeleteHostedZone\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;route53:DisassociateVPCFromHostedZone\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;route53:DisassociateVPCFromHostedZone\u0026#34;, ) ) \u0026#34;route53:DisassociateVPCFromHostedZone\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;route53:GetHostedZone\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;route53:GetHostedZone\u0026#34;, ) ) \u0026#34;route53:GetHostedZone\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;route53:ListHostedZones\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;route53:ListHostedZones\u0026#34;, ) ) \u0026#34;route53:ListHostedZones\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;route53domains:ListDomains\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;route53domains:ListDomains\u0026#34;, ) ) \u0026#34;route53domains:ListDomains\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;route53domains:ListOperations\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;route53domains:ListOperations\u0026#34;, ) ) \u0026#34;route53domains:ListOperations\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;route53domains:ListTagsForDomain\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;route53domains:ListTagsForDomain\u0026#34;, ) ) \u0026#34;route53domains:ListTagsForDomain\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;route53resolver:AssociateResolverEndpointIpAddress\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;route53resolver:AssociateResolverEndpointIpAddress\u0026#34;, ) ) \u0026#34;route53resolver:AssociateResolverEndpointIpAddress\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;route53resolver:AssociateResolverRule\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;route53resolver:AssociateResolverRule\u0026#34;, ) ) \u0026#34;route53resolver:AssociateResolverRule\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;route53resolver:CreateResolverEndpoint\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;route53resolver:CreateResolverEndpoint\u0026#34;, ) ) \u0026#34;route53resolver:CreateResolverEndpoint\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;route53resolver:CreateResolverRule\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;route53resolver:CreateResolverRule\u0026#34;, ) ) \u0026#34;route53resolver:CreateResolverRule\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;route53resolver:DeleteResolverEndpoint\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;route53resolver:DeleteResolverEndpoint\u0026#34;, ) ) \u0026#34;route53resolver:DeleteResolverEndpoint\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;route53resolver:DeleteResolverRule\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;route53resolver:DeleteResolverRule\u0026#34;, ) ) \u0026#34;route53resolver:DeleteResolverRule\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;route53resolver:DisassociateResolverEndpointIpAddress\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;route53resolver:DisassociateResolverEndpointIpAddress\u0026#34;, ) ) \u0026#34;route53resolver:DisassociateResolverEndpointIpAddress\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;route53resolver:DisassociateResolverRule\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;route53resolver:DisassociateResolverRule\u0026#34;, ) ) \u0026#34;route53resolver:DisassociateResolverRule\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;route53resolver:GetResolverEndpoint\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;route53resolver:GetResolverEndpoint\u0026#34;, ) ) \u0026#34;route53resolver:GetResolverEndpoint\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;route53resolver:GetResolverRule\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;route53resolver:GetResolverRule\u0026#34;, ) ) \u0026#34;route53resolver:GetResolverRule\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;route53resolver:ListResolverEndpointIpAddresses\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;route53resolver:ListResolverEndpointIpAddresses\u0026#34;, ) ) \u0026#34;route53resolver:ListResolverEndpointIpAddresses\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;route53resolver:ListResolverEndpoints\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;route53resolver:ListResolverEndpoints\u0026#34;, ) ) \u0026#34;route53resolver:ListResolverEndpoints\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;route53resolver:ListResolverRuleAssociations\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;route53resolver:ListResolverRuleAssociations\u0026#34;, ) ) \u0026#34;route53resolver:ListResolverRuleAssociations\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;route53resolver:ListResolverRules\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;route53resolver:ListResolverRules\u0026#34;, ) ) \u0026#34;route53resolver:ListResolverRules\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;route53resolver:ListTagsForResource\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;route53resolver:ListTagsForResource\u0026#34;, ) ) \u0026#34;route53resolver:ListTagsForResource\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;route53resolver:UpdateResolverEndpoint\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;route53resolver:UpdateResolverEndpoint\u0026#34;, ) ) \u0026#34;route53resolver:UpdateResolverEndpoint\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;route53resolver:UpdateResolverRule\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;route53resolver:UpdateResolverRule\u0026#34;, ) ) \u0026#34;route53resolver:UpdateResolverRule\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;s3:AbortMultipartUpload\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;s3:AbortMultipartUpload\u0026#34;, ) ) \u0026#34;s3:AbortMultipartUpload\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;s3:CreateBucket\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;s3:CreateBucket\u0026#34;, ) ) \u0026#34;s3:CreateBucket\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;s3:DeleteBucket\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;s3:DeleteBucket\u0026#34;, ) ) \u0026#34;s3:DeleteBucket\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;s3:DeleteObject\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;s3:DeleteObject\u0026#34;, ) ) \u0026#34;s3:DeleteObject\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;s3:GetAccountPublicAccessBlock\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;s3:GetAccountPublicAccessBlock\u0026#34;, ) ) \u0026#34;s3:GetAccountPublicAccessBlock\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;s3:GetBucketAcl\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;s3:GetBucketAcl\u0026#34;, ) ) \u0026#34;s3:GetBucketAcl\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;s3:GetBucketOwnershipControls\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;s3:GetBucketOwnershipControls\u0026#34;, ) ) \u0026#34;s3:GetBucketOwnershipControls\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;s3:GetBucketPolicy\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;s3:GetBucketPolicy\u0026#34;, ) ) \u0026#34;s3:GetBucketPolicy\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;s3:GetBucketPolicyStatus\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;s3:GetBucketPolicyStatus\u0026#34;, ) ) \u0026#34;s3:GetBucketPolicyStatus\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;s3:GetBucketPublicAccessBlock\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;s3:GetBucketPublicAccessBlock\u0026#34;, ) ) \u0026#34;s3:GetBucketPublicAccessBlock\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;s3:GetObject\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;s3:GetObject\u0026#34;, ) ) \u0026#34;s3:GetObject\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;s3:GetObjectVersion\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;s3:GetObjectVersion\u0026#34;, ) ) \u0026#34;s3:GetObjectVersion\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;s3:GetBucketVersioning\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;s3:GetBucketVersioning\u0026#34;, ) ) \u0026#34;s3:GetBucketVersioning\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;s3:ListAccessPoints\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;s3:ListAccessPoints\u0026#34;, ) ) \u0026#34;s3:ListAccessPoints\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;s3:ListAccessPointsForObjectLambda\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;s3:ListAccessPointsForObjectLambda\u0026#34;, ) ) \u0026#34;s3:ListAccessPointsForObjectLambda\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;s3:ListAllMyBuckets\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;s3:ListAllMyBuckets\u0026#34;, ) ) \u0026#34;s3:ListAllMyBuckets\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;s3:ListBucket\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;s3:ListBucket\u0026#34;, ) ) \u0026#34;s3:ListBucket\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;s3:ListBucketMultipartUploads\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;s3:ListBucketMultipartUploads\u0026#34;, ) ) \u0026#34;s3:ListBucketMultipartUploads\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;s3:ListBucketVersions\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;s3:ListBucketVersions\u0026#34;, ) ) \u0026#34;s3:ListBucketVersions\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;s3:ListJobs\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;s3:ListJobs\u0026#34;, ) ) \u0026#34;s3:ListJobs\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;s3:ListMultipartUploadParts\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;s3:ListMultipartUploadParts\u0026#34;, ) ) \u0026#34;s3:ListMultipartUploadParts\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;s3:ListMultiRegionAccessPoints\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;s3:ListMultiRegionAccessPoints\u0026#34;, ) ) \u0026#34;s3:ListMultiRegionAccessPoints\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;s3:ListStorageLensConfigurations\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;s3:ListStorageLensConfigurations\u0026#34;, ) ) \u0026#34;s3:ListStorageLensConfigurations\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;s3:PutAccountPublicAccessBlock\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;s3:PutAccountPublicAccessBlock\u0026#34;, ) ) \u0026#34;s3:PutAccountPublicAccessBlock\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;s3:PutBucketAcl\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;s3:PutBucketAcl\u0026#34;, ) ) \u0026#34;s3:PutBucketAcl\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;s3:PutBucketPolicy\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;s3:PutBucketPolicy\u0026#34;, ) ) \u0026#34;s3:PutBucketPolicy\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;s3:PutBucketPublicAccessBlock\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;s3:PutBucketPublicAccessBlock\u0026#34;, ) ) \u0026#34;s3:PutBucketPublicAccessBlock\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;s3:PutObject\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;s3:PutObject\u0026#34;, ) ) \u0026#34;s3:PutObject\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;secretsmanager:CreateSecret\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;secretsmanager:CreateSecret\u0026#34;, ) ) \u0026#34;secretsmanager:CreateSecret\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;secretsmanager:DeleteSecret\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;secretsmanager:DeleteSecret\u0026#34;, ) ) \u0026#34;secretsmanager:DeleteSecret\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;secretsmanager:DescribeSecret\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;secretsmanager:DescribeSecret\u0026#34;, ) ) \u0026#34;secretsmanager:DescribeSecret\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;secretsmanager:GetSecretValue\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;secretsmanager:GetSecretValue\u0026#34;, ) ) \u0026#34;secretsmanager:GetSecretValue\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;secretsmanager:ListSecrets\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;secretsmanager:ListSecrets\u0026#34;, ) ) \u0026#34;secretsmanager:ListSecrets\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;secretsmanager:ListSecretVersionIds\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;secretsmanager:ListSecretVersionIds\u0026#34;, ) ) \u0026#34;secretsmanager:ListSecretVersionIds\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;secretsmanager:PutResourcePolicy\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;secretsmanager:PutResourcePolicy\u0026#34;, ) ) \u0026#34;secretsmanager:PutResourcePolicy\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;secretsmanager:TagResource\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;secretsmanager:TagResource\u0026#34;, ) ) \u0026#34;secretsmanager:TagResource\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;secretsmanager:UpdateSecret\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;secretsmanager:UpdateSecret\u0026#34;, ) ) \u0026#34;secretsmanager:UpdateSecret\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;sns:ListTopics\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;sns:ListTopics\u0026#34;, ) ) \u0026#34;sns:ListTopics\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;ssm:DescribeInstanceProperties\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;ssm:DescribeInstanceProperties\u0026#34;, ) ) \u0026#34;ssm:DescribeInstanceProperties\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;ssm:DescribeSessions\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;ssm:DescribeSessions\u0026#34;, ) ) \u0026#34;ssm:DescribeSessions\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;ssm:GetConnectionStatus\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;ssm:GetConnectionStatus\u0026#34;, ) ) \u0026#34;ssm:GetConnectionStatus\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;ssm:GetParameters\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;ssm:GetParameters\u0026#34;, ) ) \u0026#34;ssm:GetParameters\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;ssm:ListAssociations\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;ssm:ListAssociations\u0026#34;, ) ) \u0026#34;ssm:ListAssociations\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;ssm:ResumeSession\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;ssm:ResumeSession\u0026#34;, ) ) \u0026#34;ssm:ResumeSession\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;ssm:StartSession\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;ssm:StartSession\u0026#34;, ) ) \u0026#34;ssm:StartSession\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;ssm:TerminateSession\u0026#34; | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;ssm:TerminateSession\u0026#34; ) ) \u0026#34;ssm:TerminateSession\u0026#34;\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho ], | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo ], ) ) ],\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;Resource\u0026#34;: \u0026#34;*\u0026#34; | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;Resource\u0026#34;: \u0026#34;*\u0026#34; ) ) \u0026#34;Resource\u0026#34;: \u0026#34;*\u0026#34;\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho } | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo } ) ) }\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho ] | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo ] ) ) ]\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho } | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo } ) ) }\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho ``` | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo ``` ) ) E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo #### Provision resources using CloudFormation | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo #### Provision resources using CloudFormation ) )\nProvision resources using CloudFormation E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo In this lab, we will use N.Virginia region (us-east-1). | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo In this lab, we will use N.Virginia region (us-east-1). ) ) In this lab, we will use N.Virginia region (us-east-1).\nE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo To prepare the workshop environment, deploy this CloudFormation Template (click link): PrivateLinkWorkshop . Accept all of the defaults when deploying the template. | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo To prepare the workshop environment, deploy this CloudFormation Template (click link): PrivateLinkWorkshop . Accept all of the defaults when deploying the template. ) ) To prepare the workshop environment, deploy this CloudFormation Template (click link): PrivateLinkWorkshop . Accept all of the defaults when deploying the template.\nE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo ) ) E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo + Tick 2 acknowledgement boxes | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo + Tick 2 acknowledgement boxes ) )\nTick 2 acknowledgement boxes E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo + Choose Create stack | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo + Choose Create stack ) )\nChoose Create stack E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo ) ) E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo The ClouddFormation deployment requires about 15 minutes to complete. | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo The ClouddFormation deployment requires about 15 minutes to complete. ) ) The ClouddFormation deployment requires about 15 minutes to complete.\nE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo ) ) E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo + 2 VPCs have been created | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo + 2 VPCs have been created ) )\n2 VPCs have been created E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo ) ) E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo + 3 EC2s have been created | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo + 3 EC2s have been created ) )\n3 EC2s have been created E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo ) ) "
},
{
	"uri": "http://localhost:1313/workshop-template/5-workshop/5.3-s3-vpc/5.3.1-create-gwe/",
	"title": "",
	"tags": [],
	"description": "",
	"content": "E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo \u0026mdash; | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026mdash; ) ) E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo title : \u0026ldquo;Create a gateway endpoint\u0026rdquo; | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo title : \u0026ldquo;Create a gateway endpoint\u0026rdquo; ) ) title : \u0026ldquo;Create a gateway endpoint\u0026rdquo;\nE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo date : \u0026ldquo;r Sys.Date()\u0026rdquo; | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo date : \u0026ldquo;r Sys.Date()\u0026rdquo; ) ) date : \u0026ldquo;r Sys.Date()\u0026rdquo;\nE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo weight : 1 | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo weight : 1 ) ) weight : 1\nE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo chapter : false | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo chapter : false ) ) chapter : false\nE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo pre : \u0026quot; 5.3.1 \u0026quot; | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo pre : \u0026quot; 5.3.1 \u0026quot; ) ) pre : \u0026quot; 5.3.1 \u0026quot;\nE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo \u0026mdash; | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026mdash; ) ) E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo 1. Open the Amazon VPC console | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo 1. Open the Amazon VPC console ) )\nOpen the Amazon VPC console E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo 2. In the navigation pane, choose Endpoints, then click Create Endpoint: | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo 2. In the navigation pane, choose Endpoints, then click Create Endpoint: ) ) 2. In the navigation pane, choose Endpoints, then click Create Endpoint:\nE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo\n"
},
{
	"uri": "http://localhost:1313/workshop-template/5-workshop/5.3-s3-vpc/5.3.2-test-gwe/",
	"title": "",
	"tags": [],
	"description": "",
	"content": "E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo \u0026mdash; | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026mdash; ) ) E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo title : \u0026ldquo;Test the Gateway Endpoint\u0026rdquo; | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo title : \u0026ldquo;Test the Gateway Endpoint\u0026rdquo; ) ) title : \u0026ldquo;Test the Gateway Endpoint\u0026rdquo;\nE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo date : \u0026ldquo;r Sys.Date()\u0026rdquo; | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo date : \u0026ldquo;r Sys.Date()\u0026rdquo; ) ) date : \u0026ldquo;r Sys.Date()\u0026rdquo;\nE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo weight : 2 | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo weight : 2 ) ) weight : 2\nE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo chapter : false | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo chapter : false ) ) chapter : false\nE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo pre : \u0026quot; 5.3.2 \u0026quot; | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo pre : \u0026quot; 5.3.2 \u0026quot; ) ) pre : \u0026quot; 5.3.2 \u0026quot;\nE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo \u0026mdash; | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026mdash; ) ) E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo #### Create S3 bucket | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo #### Create S3 bucket ) )\nCreate S3 bucket E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo 1. Navigate to S3 management console | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo 1. Navigate to S3 management console ) )\nNavigate to S3 management console E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo 2. In the Bucket console, choose Create bucket | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo 2. In the Bucket console, choose Create bucket ) ) 2. In the Bucket console, choose Create bucket\nE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo ) ) E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo 3. In the Create bucket console | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo 3. In the Create bucket console ) ) 3. In the Create bucket console\nE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo + Name the bucket: choose a name that hasn\u0026rsquo;t been given to any bucket globally (hint: lab number and your name) | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo + Name the bucket: choose a name that hasn\u0026rsquo;t been given to any bucket globally (hint: lab number and your name) ) )\nName the bucket: choose a name that hasn\u0026rsquo;t been given to any bucket globally (hint: lab number and your name) E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo ) ) E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo + Leave other fields as they are (default) | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo + Leave other fields as they are (default) ) )\nLeave other fields as they are (default) E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo + Scroll down and choose Create bucket | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo + Scroll down and choose Create bucket ) )\nScroll down and choose Create bucket E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo ) ) E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo + Successfully create S3 bucket. | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo + Successfully create S3 bucket. ) )\nSuccessfully create S3 bucket. E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo ) ) E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo #### Connect to EC2 with session manager | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo #### Connect to EC2 with session manager ) )\nConnect to EC2 with session manager E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo + For this workshop, you will use AWS Session Manager to access several EC2 instances. Session Manager is a fully managed AWS Systems Manager capability that allows you to manage your Amazon EC2 instances and on-premises virtual machines (VMs) through an interactive one-click browser-based shell. Session Manager provides secure and auditable instance management without the need to open inbound ports, maintain bastion hosts, or manage SSH keys. | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo + For this workshop, you will use AWS Session Manager to access several EC2 instances. Session Manager is a fully managed AWS Systems Manager capability that allows you to manage your Amazon EC2 instances and on-premises virtual machines (VMs) through an interactive one-click browser-based shell. Session Manager provides secure and auditable instance management without the need to open inbound ports, maintain bastion hosts, or manage SSH keys. ) )\nFor this workshop, you will use AWS Session Manager to access several EC2 instances. Session Manager is a fully managed AWS Systems Manager capability that allows you to manage your Amazon EC2 instances and on-premises virtual machines (VMs) through an interactive one-click browser-based shell. Session Manager provides secure and auditable instance management without the need to open inbound ports, maintain bastion hosts, or manage SSH keys. E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo + First cloud journey Lab for indepth understanding of Session manager. | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo + First cloud journey Lab for indepth understanding of Session manager. ) )\nFirst cloud journey Lab for indepth understanding of Session manager. E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo 1. In the AWS Management Console, start typing Systems Manager in the quick search box and press Enter: | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo 1. In the AWS Management Console, start typing Systems Manager in the quick search box and press Enter: ) )\nIn the AWS Management Console, start typing Systems Manager in the quick search box and press Enter: E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo ) ) E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo 2. From the Systems Manager menu, find Node Management in the left menu and click Session Manager: | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo 2. From the Systems Manager menu, find Node Management in the left menu and click Session Manager: ) ) 2. From the Systems Manager menu, find Node Management in the left menu and click Session Manager:\nE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo ) ) E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo 3. Click Start Session, and select the EC2 instance named Test-Gateway-Endpoint. | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo 3. Click Start Session, and select the EC2 instance named Test-Gateway-Endpoint. ) ) 3. Click Start Session, and select the EC2 instance named Test-Gateway-Endpoint.\nE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo\n"
},
{
	"uri": "http://localhost:1313/workshop-template/5-workshop/5.3-s3-vpc/",
	"title": "",
	"tags": [],
	"description": "",
	"content": "E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo \u0026mdash; | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026mdash; ) ) E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo title : \u0026ldquo;Access S3 from VPC\u0026rdquo; | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo title : \u0026ldquo;Access S3 from VPC\u0026rdquo; ) ) title : \u0026ldquo;Access S3 from VPC\u0026rdquo;\nE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo date : \u0026ldquo;r Sys.Date()\u0026rdquo; | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo date : \u0026ldquo;r Sys.Date()\u0026rdquo; ) ) date : \u0026ldquo;r Sys.Date()\u0026rdquo;\nE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo weight : 3 | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo weight : 3 ) ) weight : 3\nE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo chapter : false | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo chapter : false ) ) chapter : false\nE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo pre : \u0026quot; 5.3. \u0026quot; | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo pre : \u0026quot; 5.3. \u0026quot; ) ) pre : \u0026quot; 5.3. \u0026quot;\nE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo \u0026mdash; | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026mdash; ) ) E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo #### Using Gateway endpoint | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo #### Using Gateway endpoint ) )\nUsing Gateway endpoint E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo In this section, you will create a Gateway eendpoint to access Amazon S3 from an EC2 instance. The Gateway endpoint will allow upload an object to S3 buckets without using the Public Internet. To create an endpoint, you must specify the VPC in which you want to create the endpoint, and the service (in this case, S3) to which you want to establish the connection. | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo In this section, you will create a Gateway eendpoint to access Amazon S3 from an EC2 instance. The Gateway endpoint will allow upload an object to S3 buckets without using the Public Internet. To create an endpoint, you must specify the VPC in which you want to create the endpoint, and the service (in this case, S3) to which you want to establish the connection. ) ) In this section, you will create a Gateway eendpoint to access Amazon S3 from an EC2 instance. The Gateway endpoint will allow upload an object to S3 buckets without using the Public Internet. To create an endpoint, you must specify the VPC in which you want to create the endpoint, and the service (in this case, S3) to which you want to establish the connection.\nE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo ) ) E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo #### Content | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo #### Content ) )\nContent E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo - Create gateway endpoint | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo - Create gateway endpoint ) )\nCreate gateway endpoint E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo - Test gateway endpoint | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo - Test gateway endpoint ) )\nTest gateway endpoint "
},
{
	"uri": "http://localhost:1313/workshop-template/5-workshop/5.4-s3-onprem/5.4.1-prepare/",
	"title": "",
	"tags": [],
	"description": "",
	"content": "E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo \u0026mdash; | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026mdash; ) ) E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo title : \u0026ldquo;Prepare the environment\u0026rdquo; | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo title : \u0026ldquo;Prepare the environment\u0026rdquo; ) ) title : \u0026ldquo;Prepare the environment\u0026rdquo;\nE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo date : \u0026ldquo;r Sys.Date()\u0026rdquo; | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo date : \u0026ldquo;r Sys.Date()\u0026rdquo; ) ) date : \u0026ldquo;r Sys.Date()\u0026rdquo;\nE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo weight : 1 | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo weight : 1 ) ) weight : 1\nE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo chapter : false | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo chapter : false ) ) chapter : false\nE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo pre : \u0026quot; 5.4.1 \u0026quot; | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo pre : \u0026quot; 5.4.1 \u0026quot; ) ) pre : \u0026quot; 5.4.1 \u0026quot;\nE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo \u0026mdash; | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026mdash; ) ) E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo To prepare for this part of the workshop you will need to: | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo To prepare for this part of the workshop you will need to: ) ) To prepare for this part of the workshop you will need to:\nE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo + Deploying a CloudFormation stack | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo + Deploying a CloudFormation stack ) )\nDeploying a CloudFormation stack E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo + Modifying a VPC route table. | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo + Modifying a VPC route table. ) )\nModifying a VPC route table. E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo These components work together to simulate on-premises DNS forwarding and name resolution. | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo These components work together to simulate on-premises DNS forwarding and name resolution. ) ) These components work together to simulate on-premises DNS forwarding and name resolution.\nE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo #### Deploy the CloudFormation stack | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo #### Deploy the CloudFormation stack ) )\nDeploy the CloudFormation stack E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo The CloudFormation template will create additional services to support an on-premises simulation: | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo The CloudFormation template will create additional services to support an on-premises simulation: ) ) The CloudFormation template will create additional services to support an on-premises simulation:\nE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo + One Route 53 Private Hosted Zone that hosts Alias records for the PrivateLink S3 endpoint | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo + One Route 53 Private Hosted Zone that hosts Alias records for the PrivateLink S3 endpoint ) )\nOne Route 53 Private Hosted Zone that hosts Alias records for the PrivateLink S3 endpoint E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo + One Route 53 Inbound Resolver endpoint that enables \u0026ldquo;VPC Cloud\u0026rdquo; to resolve inbound DNS resolution requests to the Private Hosted Zone | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo + One Route 53 Inbound Resolver endpoint that enables \u0026ldquo;VPC Cloud\u0026rdquo; to resolve inbound DNS resolution requests to the Private Hosted Zone ) )\nOne Route 53 Inbound Resolver endpoint that enables \u0026ldquo;VPC Cloud\u0026rdquo; to resolve inbound DNS resolution requests to the Private Hosted Zone E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo + One Route 53 Outbound Resolver endpoint that enables \u0026ldquo;VPC On-prem\u0026rdquo; to forward DNS requests for S3 to \u0026ldquo;VPC Cloud\u0026rdquo; | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo + One Route 53 Outbound Resolver endpoint that enables \u0026ldquo;VPC On-prem\u0026rdquo; to forward DNS requests for S3 to \u0026ldquo;VPC Cloud\u0026rdquo; ) )\nOne Route 53 Outbound Resolver endpoint that enables \u0026ldquo;VPC On-prem\u0026rdquo; to forward DNS requests for S3 to \u0026ldquo;VPC Cloud\u0026rdquo; E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo ) ) E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo 1. Click the following link to open the AWS CloudFormation console. The required template will be pre-loaded into the menu. Accept all default and click Create stack. | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo 1. Click the following link to open the AWS CloudFormation console. The required template will be pre-loaded into the menu. Accept all default and click Create stack. ) )\nClick the following link to open the AWS CloudFormation console. The required template will be pre-loaded into the menu. Accept all default and click Create stack. E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo ) ) E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo ) ) E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo It may take a few minutes for stack deployment to complete. You can continue with the next step without waiting for the deployemnt to finish. | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo It may take a few minutes for stack deployment to complete. You can continue with the next step without waiting for the deployemnt to finish. ) ) It may take a few minutes for stack deployment to complete. You can continue with the next step without waiting for the deployemnt to finish.\nE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo #### Update on-premise private route table | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo #### Update on-premise private route table ) )\nUpdate on-premise private route table E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo This workshop uses a strongSwan VPN running on an EC2 instance to simulate connectivty between an on-premises datacenter and the AWS cloud. Most of the required components are provisioned before your start. To finalize the VPN configuration, you will modify the \u0026ldquo;VPC On-prem\u0026rdquo; routing table to direct traffic destined for the cloud to the strongSwan VPN instance. | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo This workshop uses a strongSwan VPN running on an EC2 instance to simulate connectivty between an on-premises datacenter and the AWS cloud. Most of the required components are provisioned before your start. To finalize the VPN configuration, you will modify the \u0026ldquo;VPC On-prem\u0026rdquo; routing table to direct traffic destined for the cloud to the strongSwan VPN instance. ) ) This workshop uses a strongSwan VPN running on an EC2 instance to simulate connectivty between an on-premises datacenter and the AWS cloud. Most of the required components are provisioned before your start. To finalize the VPN configuration, you will modify the \u0026ldquo;VPC On-prem\u0026rdquo; routing table to direct traffic destined for the cloud to the strongSwan VPN instance.\nE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo 1. Open the Amazon EC2 console | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo 1. Open the Amazon EC2 console ) )\nOpen the Amazon EC2 console E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo 2. Select the instance named infra-vpngw-test. From the Details tab, copy the Instance ID and paste this into your text editor | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo 2. Select the instance named infra-vpngw-test. From the Details tab, copy the Instance ID and paste this into your text editor ) ) 2. Select the instance named infra-vpngw-test. From the Details tab, copy the Instance ID and paste this into your text editor\nE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo ) ) E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo 3. Navigate to the VPC menu by using the Search box at the top of the browser window. | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo 3. Navigate to the VPC menu by using the Search box at the top of the browser window. ) ) 3. Navigate to the VPC menu by using the Search box at the top of the browser window.\nE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo 4. Click on Route Tables, select the RT Private On-prem route table, select the Routes tab, and click Edit Routes. | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo 4. Click on Route Tables, select the RT Private On-prem route table, select the Routes tab, and click Edit Routes. ) ) 4. Click on Route Tables, select the RT Private On-prem route table, select the Routes tab, and click Edit Routes.\nE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo ) ) E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo 5. Click Add route. | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo 5. Click Add route. ) ) 5. Click Add route.\nE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo + Destination: your Cloud VPC cidr range | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo + Destination: your Cloud VPC cidr range ) )\nDestination: your Cloud VPC cidr range E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo + Target: ID of your infra-vpngw-test instance (you saved in your editor at step 1) | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo + Target: ID of your infra-vpngw-test instance (you saved in your editor at step 1) ) )\nTarget: ID of your infra-vpngw-test instance (you saved in your editor at step 1) E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo ) ) E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo 6. Click Save changes | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo 6. Click Save changes ) ) 6. Click Save changes\n"
},
{
	"uri": "http://localhost:1313/workshop-template/5-workshop/5.4-s3-onprem/5.4.2-create-interface-enpoint/",
	"title": "",
	"tags": [],
	"description": "",
	"content": "E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo \u0026mdash; | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026mdash; ) ) E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo title : \u0026ldquo;Create an S3 Interface endpoint\u0026rdquo; | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo title : \u0026ldquo;Create an S3 Interface endpoint\u0026rdquo; ) ) title : \u0026ldquo;Create an S3 Interface endpoint\u0026rdquo;\nE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo date : \u0026ldquo;r Sys.Date()\u0026rdquo; | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo date : \u0026ldquo;r Sys.Date()\u0026rdquo; ) ) date : \u0026ldquo;r Sys.Date()\u0026rdquo;\nE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo weight : 2 | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo weight : 2 ) ) weight : 2\nE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo chapter : false | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo chapter : false ) ) chapter : false\nE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo pre : \u0026quot; 5.4.2 \u0026quot; | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo pre : \u0026quot; 5.4.2 \u0026quot; ) ) pre : \u0026quot; 5.4.2 \u0026quot;\nE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo \u0026mdash; | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026mdash; ) ) E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo In this section you will create and test an S3 interface endpoint using the simulated on-premises environment deployed as part of this workshop. | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo In this section you will create and test an S3 interface endpoint using the simulated on-premises environment deployed as part of this workshop. ) ) In this section you will create and test an S3 interface endpoint using the simulated on-premises environment deployed as part of this workshop.\nE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo 1. Return to the Amazon VPC menu. In the navigation pane, choose Endpoints, then click Create Endpoint. | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo 1. Return to the Amazon VPC menu. In the navigation pane, choose Endpoints, then click Create Endpoint. ) )\nReturn to the Amazon VPC menu. In the navigation pane, choose Endpoints, then click Create Endpoint. E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo 2. In Create endpoint console: | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo 2. In Create endpoint console: ) ) 2. In Create endpoint console:\nE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo + Name the interface endpoint | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo + Name the interface endpoint ) )\nName the interface endpoint E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo + In Service category, choose aws services | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo + In Service category, choose aws services ) )\nIn Service category, choose aws services E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo ) ) E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo 3. In the Search box, type S3 and press Enter. Select the endpoint named com.amazonaws.us-east-1.s3. Ensure that the Type column indicates Interface. | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo 3. In the Search box, type S3 and press Enter. Select the endpoint named com.amazonaws.us-east-1.s3. Ensure that the Type column indicates Interface. ) ) 3. In the Search box, type S3 and press Enter. Select the endpoint named com.amazonaws.us-east-1.s3. Ensure that the Type column indicates Interface.\nE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo ) ) E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo 4. For VPC, select VPC Cloud from the drop-down. | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo 4. For VPC, select VPC Cloud from the drop-down. ) ) 4. For VPC, select VPC Cloud from the drop-down.\nE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo\n"
},
{
	"uri": "http://localhost:1313/workshop-template/5-workshop/5.4-s3-onprem/5.4.3-test-endpoint/",
	"title": "",
	"tags": [],
	"description": "",
	"content": "E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo \u0026mdash; | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026mdash; ) ) E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo title : \u0026ldquo;Test the Interface Endpoint\u0026rdquo; | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo title : \u0026ldquo;Test the Interface Endpoint\u0026rdquo; ) ) title : \u0026ldquo;Test the Interface Endpoint\u0026rdquo;\nE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo date : \u0026ldquo;r Sys.Date()\u0026rdquo; | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo date : \u0026ldquo;r Sys.Date()\u0026rdquo; ) ) date : \u0026ldquo;r Sys.Date()\u0026rdquo;\nE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo weight : 3 | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo weight : 3 ) ) weight : 3\nE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo chapter : false | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo chapter : false ) ) chapter : false\nE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo pre : \u0026quot; 5.4.3 \u0026quot; | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo pre : \u0026quot; 5.4.3 \u0026quot; ) ) pre : \u0026quot; 5.4.3 \u0026quot;\nE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo \u0026mdash; | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026mdash; ) ) E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo #### Get the regional DNS name of S3 interface endpoint | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo #### Get the regional DNS name of S3 interface endpoint ) )\nGet the regional DNS name of S3 interface endpoint E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo 1. From the Amazon VPC menu, choose Endpoints. | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo 1. From the Amazon VPC menu, choose Endpoints. ) )\nFrom the Amazon VPC menu, choose Endpoints. E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo 2. Click the name of newly created endpoint: s3-interface-endpoint. Click details and save the regional DNS name of the endpoint (the first one) to your text-editor for later use. | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo 2. Click the name of newly created endpoint: s3-interface-endpoint. Click details and save the regional DNS name of the endpoint (the first one) to your text-editor for later use. ) ) 2. Click the name of newly created endpoint: s3-interface-endpoint. Click details and save the regional DNS name of the endpoint (the first one) to your text-editor for later use.\nE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo ) ) E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo #### Connect to EC2 instance in \u0026ldquo;VPC On-prem\u0026rdquo; | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo #### Connect to EC2 instance in \u0026ldquo;VPC On-prem\u0026rdquo; ) )\nConnect to EC2 instance in \u0026ldquo;VPC On-prem\u0026rdquo; E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo 1. Navigate to Session manager by typing \u0026ldquo;session manager\u0026rdquo; in the search box | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo 1. Navigate to Session manager by typing \u0026ldquo;session manager\u0026rdquo; in the search box ) )\nNavigate to Session manager by typing \u0026ldquo;session manager\u0026rdquo; in the search box E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo 2. Click Start Session, and select the EC2 instance named Test-Interface-Endpoint. This EC2 instance is running in \u0026ldquo;VPC On-prem\u0026rdquo; and will be used to test connectivty to Amazon S3 through the Interface endpoint we just created. Session Manager will open a new browser tab with a shell prompt: sh-4.2 $ | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo 2. Click Start Session, and select the EC2 instance named Test-Interface-Endpoint. This EC2 instance is running in \u0026ldquo;VPC On-prem\u0026rdquo; and will be used to test connectivty to Amazon S3 through the Interface endpoint we just created. Session Manager will open a new browser tab with a shell prompt: sh-4.2 $ ) ) 2. Click Start Session, and select the EC2 instance named Test-Interface-Endpoint. This EC2 instance is running in \u0026ldquo;VPC On-prem\u0026rdquo; and will be used to test connectivty to Amazon S3 through the Interface endpoint we just created. Session Manager will open a new browser tab with a shell prompt: sh-4.2 $\nE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo ) ) E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo 3. Change to the ssm-user\u0026rsquo;s home directory with command \u0026ldquo;cd ~\u0026rdquo; | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo 3. Change to the ssm-user\u0026rsquo;s home directory with command \u0026ldquo;cd ~\u0026rdquo; ) ) 3. Change to the ssm-user\u0026rsquo;s home directory with command \u0026ldquo;cd ~\u0026rdquo;\nE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo 4. Create a file named testfile2.xyz | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo 4. Create a file named testfile2.xyz ) ) 4. Create a file named testfile2.xyz\nE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo | findstr /R \u0026quot;^date:\u0026quot; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo ) )\nE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho fallocate -l 1G testfile2.xyz | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo fallocate -l 1G testfile2.xyz ) ) fallocate -l 1G testfile2.xyz\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho ``` | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo ``` ) ) E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo ) ) E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo 5. Copy file to the same S3 bucket we created in section 3.2 | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo 5. Copy file to the same S3 bucket we created in section 3.2 ) ) 5. Copy file to the same S3 bucket we created in section 3.2\nE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo | findstr /R \u0026quot;^date:\u0026quot; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo ) )\nE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho aws s3 cp --endpoint-url https://bucket.\u0026lt;Regional-DNS-Name\u0026gt; testfile2.xyz s3://\u0026lt;your-bucket-name\u0026gt; | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo aws s3 cp --endpoint-url https://bucket.\u0026lt;Regional-DNS-Name\u0026gt; testfile2.xyz s3://\u0026lt;your-bucket-name\u0026gt; ) ) aws s3 cp --endpoint-url https://bucket.\u0026lt;Regional-DNS-Name\u0026gt; testfile2.xyz s3://\u0026lt;your-bucket-name\u0026gt;\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho ``` | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo ``` ) ) E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo + This command requires the \u0026ndash;endpoint-url parameter, because you need to use the endpoint-specific DNS name to access S3 using an Interface endpoint. | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo + This command requires the \u0026ndash;endpoint-url parameter, because you need to use the endpoint-specific DNS name to access S3 using an Interface endpoint. ) )\nThis command requires the \u0026ndash;endpoint-url parameter, because you need to use the endpoint-specific DNS name to access S3 using an Interface endpoint. E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo + Do not include the leading \u0026rsquo; * \u0026rsquo; when copying/pasting the regional DNS name. | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo + Do not include the leading \u0026rsquo; * \u0026rsquo; when copying/pasting the regional DNS name. ) )\nDo not include the leading \u0026rsquo; * \u0026rsquo; when copying/pasting the regional DNS name. E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo + Provide your S3 bucket name created earlier | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo + Provide your S3 bucket name created earlier ) )\nProvide your S3 bucket name created earlier E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo ) ) E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo Now the file has been added to your S3 bucket. Let check your S3 bucket in the next step. | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo Now the file has been added to your S3 bucket. Let check your S3 bucket in the next step. ) ) Now the file has been added to your S3 bucket. Let check your S3 bucket in the next step.\nE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo #### Check Object in S3 bucket | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo #### Check Object in S3 bucket ) )\nCheck Object in S3 bucket E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo 1. Navigate to S3 console | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo 1. Navigate to S3 console ) )\nNavigate to S3 console E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo 2. Click Buckets | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo 2. Click Buckets ) ) 2. Click Buckets\nE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo 3. Click the name of your bucket and you will see testfile2.xyz has been added to your bucket | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo 3. Click the name of your bucket and you will see testfile2.xyz has been added to your bucket ) ) 3. Click the name of your bucket and you will see testfile2.xyz has been added to your bucket\nE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo ) ) "
},
{
	"uri": "http://localhost:1313/workshop-template/5-workshop/5.4-s3-onprem/5.4.4-dns-simulation/",
	"title": "",
	"tags": [],
	"description": "",
	"content": "E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo \u0026mdash; | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026mdash; ) ) E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo title : \u0026ldquo;On-premises DNS Simulation\u0026rdquo; | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo title : \u0026ldquo;On-premises DNS Simulation\u0026rdquo; ) ) title : \u0026ldquo;On-premises DNS Simulation\u0026rdquo;\nE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo date : \u0026ldquo;r Sys.Date()\u0026rdquo; | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo date : \u0026ldquo;r Sys.Date()\u0026rdquo; ) ) date : \u0026ldquo;r Sys.Date()\u0026rdquo;\nE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo weight : 4 | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo weight : 4 ) ) weight : 4\nE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo chapter : false | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo chapter : false ) ) chapter : false\nE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo pre : \u0026quot; 5.4.4 \u0026quot; | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo pre : \u0026quot; 5.4.4 \u0026quot; ) ) pre : \u0026quot; 5.4.4 \u0026quot;\nE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo \u0026mdash; | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026mdash; ) ) E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo AWS PrivateLink endpoints have a fixed IP address in each Availability Zone where they are deployed, for the life of the endpoint (until it is deleted). These IP addresses are attached to Elastic Network Interfaces (ENIs). AWS recommends using DNS to resolve the IP addresses for endpoints so that downstream applications use the latest IP addresses when ENIs are added to new AZs, or deleted over time. | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo AWS PrivateLink endpoints have a fixed IP address in each Availability Zone where they are deployed, for the life of the endpoint (until it is deleted). These IP addresses are attached to Elastic Network Interfaces (ENIs). AWS recommends using DNS to resolve the IP addresses for endpoints so that downstream applications use the latest IP addresses when ENIs are added to new AZs, or deleted over time. ) ) AWS PrivateLink endpoints have a fixed IP address in each Availability Zone where they are deployed, for the life of the endpoint (until it is deleted). These IP addresses are attached to Elastic Network Interfaces (ENIs). AWS recommends using DNS to resolve the IP addresses for endpoints so that downstream applications use the latest IP addresses when ENIs are added to new AZs, or deleted over time.\nE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo In this section, you will create a forwarding rule to send DNS resolution requests from a simulated on-premises environment to a Route 53 Private Hosted Zone. This section leverages the infrastructure deployed by CloudFormation in the Prepare the environment section. | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo In this section, you will create a forwarding rule to send DNS resolution requests from a simulated on-premises environment to a Route 53 Private Hosted Zone. This section leverages the infrastructure deployed by CloudFormation in the Prepare the environment section. ) ) In this section, you will create a forwarding rule to send DNS resolution requests from a simulated on-premises environment to a Route 53 Private Hosted Zone. This section leverages the infrastructure deployed by CloudFormation in the Prepare the environment section.\nE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo #### Create DNS Alias Records for the Interface endpoint | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo #### Create DNS Alias Records for the Interface endpoint ) )\nCreate DNS Alias Records for the Interface endpoint E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo 1. Navigate to the Route 53 management console (Hosted Zones section). The CloudFormation template you deployed in the Prepare the environment section created this Private Hosted Zone. Click on the name of the Private Hosted Zone, s3.us-east-1.amazonaws.com: | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo 1. Navigate to the Route 53 management console (Hosted Zones section). The CloudFormation template you deployed in the Prepare the environment section created this Private Hosted Zone. Click on the name of the Private Hosted Zone, s3.us-east-1.amazonaws.com: ) )\nNavigate to the Route 53 management console (Hosted Zones section). The CloudFormation template you deployed in the Prepare the environment section created this Private Hosted Zone. Click on the name of the Private Hosted Zone, s3.us-east-1.amazonaws.com: E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo ) ) E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo 2. Create a new record in the Private Hosted Zone: | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo 2. Create a new record in the Private Hosted Zone: ) ) 2. Create a new record in the Private Hosted Zone:\nE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo ) ) E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo + Record name and record type keep default options | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo + Record name and record type keep default options ) )\nRecord name and record type keep default options E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo + Alias Button: Click to enable | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo + Alias Button: Click to enable ) )\nAlias Button: Click to enable E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo + Route traffic to: Alias to VPC Endpoint | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo + Route traffic to: Alias to VPC Endpoint ) )\nRoute traffic to: Alias to VPC Endpoint E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo + Region: US East (N. Virginia) [us-east-1] | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo + Region: US East (N. Virginia) [us-east-1] ) )\nRegion: US East (N. Virginia) [us-east-1] E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo + Choose endpoint: Paste the Regional VPC Endpoint DNS name from your text editor (you saved when doing section 4.3) | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo + Choose endpoint: Paste the Regional VPC Endpoint DNS name from your text editor (you saved when doing section 4.3) ) )\nChoose endpoint: Paste the Regional VPC Endpoint DNS name from your text editor (you saved when doing section 4.3) E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo ) ) E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo 3. Click Add another record, and add a second record using the following values. Click Create records when finished to create both records. | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo 3. Click Add another record, and add a second record using the following values. Click Create records when finished to create both records. ) ) 3. Click Add another record, and add a second record using the following values. Click Create records when finished to create both records.\nE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo + Record name: *. | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo + Record name: *. ) )\nRecord name: *. E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo + Record type: keep default value (type A) | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo + Record type: keep default value (type A) ) )\nRecord type: keep default value (type A) E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo + Alias Button: Click to enable | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo + Alias Button: Click to enable ) )\nAlias Button: Click to enable E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo + Route traffic to: Alias to VPC Endpoint | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo + Route traffic to: Alias to VPC Endpoint ) )\nRoute traffic to: Alias to VPC Endpoint E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo + Region: US East (N. Virginia) [us-east-1] | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo + Region: US East (N. Virginia) [us-east-1] ) )\nRegion: US East (N. Virginia) [us-east-1] E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo + Choose endpoint: Paste the Regional VPC Endpoint DNS name from your text editor | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo + Choose endpoint: Paste the Regional VPC Endpoint DNS name from your text editor ) )\nChoose endpoint: Paste the Regional VPC Endpoint DNS name from your text editor E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo ) ) E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo The new records appear in the Route 53 console: | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo The new records appear in the Route 53 console: ) ) The new records appear in the Route 53 console:\nE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo ) ) E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo #### Create a Resolver Forwarding Rule | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo #### Create a Resolver Forwarding Rule ) )\nCreate a Resolver Forwarding Rule E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo Route 53 Resolver Forwarding Rules allow you to forward DNS queries from your VPC to other sources for name resolution. Outside of a workshop environment, you might use this feature to forward DNS queries from your VPC to DNS servers running on-premises. In this section, you will simulate an on-premises conditional forwarder by creating a forwarding rule that forwards DNS queries for Amazon S3 to a Private Hosted Zone running in \u0026ldquo;VPC Cloud\u0026rdquo; in-order to resolve the PrivateLink interface endpoint regional DNS name. | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo Route 53 Resolver Forwarding Rules allow you to forward DNS queries from your VPC to other sources for name resolution. Outside of a workshop environment, you might use this feature to forward DNS queries from your VPC to DNS servers running on-premises. In this section, you will simulate an on-premises conditional forwarder by creating a forwarding rule that forwards DNS queries for Amazon S3 to a Private Hosted Zone running in \u0026ldquo;VPC Cloud\u0026rdquo; in-order to resolve the PrivateLink interface endpoint regional DNS name. ) ) Route 53 Resolver Forwarding Rules allow you to forward DNS queries from your VPC to other sources for name resolution. Outside of a workshop environment, you might use this feature to forward DNS queries from your VPC to DNS servers running on-premises. In this section, you will simulate an on-premises conditional forwarder by creating a forwarding rule that forwards DNS queries for Amazon S3 to a Private Hosted Zone running in \u0026ldquo;VPC Cloud\u0026rdquo; in-order to resolve the PrivateLink interface endpoint regional DNS name.\nE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo 1. From the Route 53 management console, click Inbound endpoints on the left side bar | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo 1. From the Route 53 management console, click Inbound endpoints on the left side bar ) )\nFrom the Route 53 management console, click Inbound endpoints on the left side bar E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo 2. In the Inbound endpoints console, click the ID of the inbound endpoint | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo 2. In the Inbound endpoints console, click the ID of the inbound endpoint ) ) 2. In the Inbound endpoints console, click the ID of the inbound endpoint\nE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo ) ) E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo 3. Copy the two IP addresses listed to your text editor | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo 3. Copy the two IP addresses listed to your text editor ) ) 3. Copy the two IP addresses listed to your text editor\nE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo ) ) E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo 4. From the Route 53 menu, choose Resolver \u0026gt; Rules, and click Create rule: | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo 4. From the Route 53 menu, choose Resolver \u0026gt; Rules, and click Create rule: ) ) 4. From the Route 53 menu, choose Resolver \u0026gt; Rules, and click Create rule:\nE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo ) ) E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo 5. In the Create rule console: | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo 5. In the Create rule console: ) ) 5. In the Create rule console:\nE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo + Name: myS3Rule | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo + Name: myS3Rule ) )\nName: myS3Rule E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo + Rule type: Forward | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo + Rule type: Forward ) )\nRule type: Forward E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo + Domain name: s3.us-east-1.amazonaws.com | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo + Domain name: s3.us-east-1.amazonaws.com ) )\nDomain name: s3.us-east-1.amazonaws.com E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo ) ) E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo + VPC: VPC On-prem | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo + VPC: VPC On-prem ) )\nVPC: VPC On-prem E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo + Outbound endpoint: VPCOnpremOutboundEndpoint | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo + Outbound endpoint: VPCOnpremOutboundEndpoint ) )\nOutbound endpoint: VPCOnpremOutboundEndpoint E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo ) ) E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo + Target IP Addresses: Enter both IP addresses from your text editor (inbound endpoint addresses) and then click Submit | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo + Target IP Addresses: Enter both IP addresses from your text editor (inbound endpoint addresses) and then click Submit ) )\nTarget IP Addresses: Enter both IP addresses from your text editor (inbound endpoint addresses) and then click Submit E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo ) ) E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo You have successfully created resolver forwarding rule. | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo You have successfully created resolver forwarding rule. ) ) You have successfully created resolver forwarding rule.\nE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo ) ) E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo #### Test the on-premises DNS Simulation | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo #### Test the on-premises DNS Simulation ) )\nTest the on-premises DNS Simulation E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo 1. Connect to Test-Interface-Endpoint EC2 instance with Session manager | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo 1. Connect to Test-Interface-Endpoint EC2 instance with Session manager ) )\nConnect to Test-Interface-Endpoint EC2 instance with Session manager E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo ) ) E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo 2. Test DNS resolution. The dig command will return the IP addresses assigned to the VPC Interface endpoint running in VPC Cloud (your IP\u0026rsquo;s will be different): dig +short s3.us-east-1.amazonaws.com | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo 2. Test DNS resolution. The dig command will return the IP addresses assigned to the VPC Interface endpoint running in VPC Cloud (your IP\u0026rsquo;s will be different): dig +short s3.us-east-1.amazonaws.com ) ) 2. Test DNS resolution. The dig command will return the IP addresses assigned to the VPC Interface endpoint running in VPC Cloud (your IP\u0026rsquo;s will be different): dig +short s3.us-east-1.amazonaws.com\nE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo\n"
},
{
	"uri": "http://localhost:1313/workshop-template/5-workshop/5.4-s3-onprem/",
	"title": "",
	"tags": [],
	"description": "",
	"content": "E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo \u0026mdash; | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026mdash; ) ) E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo title : \u0026ldquo;Access S3 from on-premises\u0026rdquo; | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo title : \u0026ldquo;Access S3 from on-premises\u0026rdquo; ) ) title : \u0026ldquo;Access S3 from on-premises\u0026rdquo;\nE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo date : \u0026ldquo;r Sys.Date()\u0026rdquo; | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo date : \u0026ldquo;r Sys.Date()\u0026rdquo; ) ) date : \u0026ldquo;r Sys.Date()\u0026rdquo;\nE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo weight : 4 | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo weight : 4 ) ) weight : 4\nE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo chapter : false | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo chapter : false ) ) chapter : false\nE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo pre : \u0026quot; 5.4. \u0026quot; | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo pre : \u0026quot; 5.4. \u0026quot; ) ) pre : \u0026quot; 5.4. \u0026quot;\nE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo \u0026mdash; | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026mdash; ) ) E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo #### Overview | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo #### Overview ) )\nOverview E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo + In this section, you will create an Interface endpoint to access Amazon S3 from a simulated on-premises environment. The Interface endpoint will allow you to route to Amazon S3 over a VPN connection from your simulated on-premises environment. | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo + In this section, you will create an Interface endpoint to access Amazon S3 from a simulated on-premises environment. The Interface endpoint will allow you to route to Amazon S3 over a VPN connection from your simulated on-premises environment. ) )\nIn this section, you will create an Interface endpoint to access Amazon S3 from a simulated on-premises environment. The Interface endpoint will allow you to route to Amazon S3 over a VPN connection from your simulated on-premises environment. E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo + Why using Interface endpoint: | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo + Why using Interface endpoint: ) )\nWhy using Interface endpoint: E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo + Gateway endpoints only work with resources running in the VPC where they are created. Interface endpoints work with resources running in VPC, and also resources running in on-premises environments. Connectivty from your on-premises environment to the cloud can be provided by AWS Site-to-Site VPN or AWS Direct Connect. | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo + Gateway endpoints only work with resources running in the VPC where they are created. Interface endpoints work with resources running in VPC, and also resources running in on-premises environments. Connectivty from your on-premises environment to the cloud can be provided by AWS Site-to-Site VPN or AWS Direct Connect. ) ) + Gateway endpoints only work with resources running in the VPC where they are created. Interface endpoints work with resources running in VPC, and also resources running in on-premises environments. Connectivty from your on-premises environment to the cloud can be provided by AWS Site-to-Site VPN or AWS Direct Connect.\nE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo + Interface endpoints allow you to connect to services powered by AWS PrivateLink. These services include some AWS services, services hosted by other AWS customers and partners in their own VPCs (referred to as PrivateLink Endpoint Services), and supported AWS Marketplace Partner services. For this workshop, we will focus on connecting to Amazon S3. | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo + Interface endpoints allow you to connect to services powered by AWS PrivateLink. These services include some AWS services, services hosted by other AWS customers and partners in their own VPCs (referred to as PrivateLink Endpoint Services), and supported AWS Marketplace Partner services. For this workshop, we will focus on connecting to Amazon S3. ) ) + Interface endpoints allow you to connect to services powered by AWS PrivateLink. These services include some AWS services, services hosted by other AWS customers and partners in their own VPCs (referred to as PrivateLink Endpoint Services), and supported AWS Marketplace Partner services. For this workshop, we will focus on connecting to Amazon S3.\nE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo ) ) "
},
{
	"uri": "http://localhost:1313/workshop-template/5-workshop/5.5-policy/",
	"title": "",
	"tags": [],
	"description": "",
	"content": "E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo \u0026mdash; | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026mdash; ) ) E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo title : \u0026ldquo;VPC Endpoint Policies\u0026rdquo; | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo title : \u0026ldquo;VPC Endpoint Policies\u0026rdquo; ) ) title : \u0026ldquo;VPC Endpoint Policies\u0026rdquo;\nE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo date : \u0026ldquo;r Sys.Date()\u0026rdquo; | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo date : \u0026ldquo;r Sys.Date()\u0026rdquo; ) ) date : \u0026ldquo;r Sys.Date()\u0026rdquo;\nE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo weight : 5 | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo weight : 5 ) ) weight : 5\nE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo chapter : false | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo chapter : false ) ) chapter : false\nE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo pre : \u0026quot; 5.5. \u0026quot; | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo pre : \u0026quot; 5.5. \u0026quot; ) ) pre : \u0026quot; 5.5. \u0026quot;\nE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo \u0026mdash; | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026mdash; ) ) E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo When you create an interface or gateway endpoint, you can attach an endpoint policy to it that controls access to the service to which you are connecting. A VPC endpoint policy is an IAM resource policy that you attach to an endpoint. If you do not attach a policy when you create an endpoint, AWS attaches a default policy for you that allows full access to the service through the endpoint. | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo When you create an interface or gateway endpoint, you can attach an endpoint policy to it that controls access to the service to which you are connecting. A VPC endpoint policy is an IAM resource policy that you attach to an endpoint. If you do not attach a policy when you create an endpoint, AWS attaches a default policy for you that allows full access to the service through the endpoint. ) ) When you create an interface or gateway endpoint, you can attach an endpoint policy to it that controls access to the service to which you are connecting. A VPC endpoint policy is an IAM resource policy that you attach to an endpoint. If you do not attach a policy when you create an endpoint, AWS attaches a default policy for you that allows full access to the service through the endpoint.\nE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo You can create a policy that restricts access to specific S3 buckets only. This is useful if you only want certain S3 Buckets to be accessible through the endpoint. | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo You can create a policy that restricts access to specific S3 buckets only. This is useful if you only want certain S3 Buckets to be accessible through the endpoint. ) ) You can create a policy that restricts access to specific S3 buckets only. This is useful if you only want certain S3 Buckets to be accessible through the endpoint.\nE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo In this section you will create a VPC endpoint policy that restricts access to the S3 bucket specified in the VPC endpoint policy. | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo In this section you will create a VPC endpoint policy that restricts access to the S3 bucket specified in the VPC endpoint policy. ) ) In this section you will create a VPC endpoint policy that restricts access to the S3 bucket specified in the VPC endpoint policy.\nE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo ) ) E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo #### Connect to an EC2 instance and verify connectivity to S3 | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo #### Connect to an EC2 instance and verify connectivity to S3 ) )\nConnect to an EC2 instance and verify connectivity to S3 E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo 1. Start a new AWS Session Manager session on the instance named Test-Gateway-Endpoint. From the session, verify that you can list the contents of the bucket you created in Part 1: Access S3 from VPC: | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo 1. Start a new AWS Session Manager session on the instance named Test-Gateway-Endpoint. From the session, verify that you can list the contents of the bucket you created in Part 1: Access S3 from VPC: ) )\nStart a new AWS Session Manager session on the instance named Test-Gateway-Endpoint. From the session, verify that you can list the contents of the bucket you created in Part 1: Access S3 from VPC: E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo | findstr /R \u0026quot;^date:\u0026quot; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo ) )\nE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho aws s3 ls s3://\\\u0026lt;your-bucket-name\\\u0026gt; | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo aws s3 ls s3://\\\u0026lt;your-bucket-name\\\u0026gt; ) ) aws s3 ls s3://\\\u0026lt;your-bucket-name\\\u0026gt;\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho ``` | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo ``` ) ) E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo ) ) E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo The bucket contents include the two 1 GB files uploaded in earlier. | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo The bucket contents include the two 1 GB files uploaded in earlier. ) ) The bucket contents include the two 1 GB files uploaded in earlier.\nE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo 2. Create a new S3 bucket; follow the naming pattern you used in Part 1, but add a \u0026lsquo;-2\u0026rsquo; to the name. Leave other fields as default and click create | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo 2. Create a new S3 bucket; follow the naming pattern you used in Part 1, but add a \u0026lsquo;-2\u0026rsquo; to the name. Leave other fields as default and click create ) ) 2. Create a new S3 bucket; follow the naming pattern you used in Part 1, but add a \u0026lsquo;-2\u0026rsquo; to the name. Leave other fields as default and click create\nE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo ) ) E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo Successfully create bucket | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo Successfully create bucket ) ) Successfully create bucket\nE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo ) ) E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo 3. Navigate to: Services \u0026gt; VPC \u0026gt; Endpoints, then select the Gateway VPC endpoint you created earlier. Click the Policy tab. Click Edit policy. | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo 3. Navigate to: Services \u0026gt; VPC \u0026gt; Endpoints, then select the Gateway VPC endpoint you created earlier. Click the Policy tab. Click Edit policy. ) ) 3. Navigate to: Services \u0026gt; VPC \u0026gt; Endpoints, then select the Gateway VPC endpoint you created earlier. Click the Policy tab. Click Edit policy.\nE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo ) ) E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo The default policy allows access to all S3 Buckets through the VPC endpoint. | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo The default policy allows access to all S3 Buckets through the VPC endpoint. ) ) The default policy allows access to all S3 Buckets through the VPC endpoint.\nE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo 4. In Edit Policy console, copy \u0026amp; Paste the following policy, then replace yourbucketname-2 with your 2nd bucket name. This policy will allow access through the VPC endpoint to your new bucket, but not any other bucket in Amazon S3. Click Save to apply the policy. | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo 4. In Edit Policy console, copy \u0026amp; Paste the following policy, then replace yourbucketname-2 with your 2nd bucket name. This policy will allow access through the VPC endpoint to your new bucket, but not any other bucket in Amazon S3. Click Save to apply the policy. ) ) 4. In Edit Policy console, copy \u0026amp; Paste the following policy, then replace yourbucketname-2 with your 2nd bucket name. This policy will allow access through the VPC endpoint to your new bucket, but not any other bucket in Amazon S3. Click Save to apply the policy.\nE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo | findstr /R \u0026quot;^date:\u0026quot; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo ) )\nE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho { | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo { ) ) {\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;Id\u0026#34;: \u0026#34;Policy1631305502445\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;Id\u0026#34;: \u0026#34;Policy1631305502445\u0026#34;, ) ) \u0026#34;Id\u0026#34;: \u0026#34;Policy1631305502445\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;Version\u0026#34;: \u0026#34;2012-10-17\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;Version\u0026#34;: \u0026#34;2012-10-17\u0026#34;, ) ) \u0026#34;Version\u0026#34;: \u0026#34;2012-10-17\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;Statement\u0026#34;: [ | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;Statement\u0026#34;: [ ) ) \u0026#34;Statement\u0026#34;: [\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho { | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo { ) ) {\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;Sid\u0026#34;: \u0026#34;Stmt1631305501021\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;Sid\u0026#34;: \u0026#34;Stmt1631305501021\u0026#34;, ) ) \u0026#34;Sid\u0026#34;: \u0026#34;Stmt1631305501021\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;Action\u0026#34;: \u0026#34;s3:*\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;Action\u0026#34;: \u0026#34;s3:*\u0026#34;, ) ) \u0026#34;Action\u0026#34;: \u0026#34;s3:*\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;Effect\u0026#34;: \u0026#34;Allow\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;Effect\u0026#34;: \u0026#34;Allow\u0026#34;, ) ) \u0026#34;Effect\u0026#34;: \u0026#34;Allow\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;Resource\u0026#34;: [ | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;Resource\u0026#34;: [ ) ) \u0026#34;Resource\u0026#34;: [\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;arn:aws:s3:::yourbucketname-2\u0026#34;, | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;arn:aws:s3:::yourbucketname-2\u0026#34;, ) ) \u0026#34;arn:aws:s3:::yourbucketname-2\u0026#34;,\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;arn:aws:s3:::yourbucketname-2/*\u0026#34; | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;arn:aws:s3:::yourbucketname-2/*\u0026#34; ) ) \u0026#34;arn:aws:s3:::yourbucketname-2/*\u0026#34;\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho ], | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo ], ) ) ],\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho \u0026#34;Principal\u0026#34;: \u0026#34;*\u0026#34; | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026#34;Principal\u0026#34;: \u0026#34;*\u0026#34; ) ) \u0026#34;Principal\u0026#34;: \u0026#34;*\u0026#34;\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho } | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo } ) ) }\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho ] | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo ] ) ) ]\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho } | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo } ) ) }\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho ``` | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo ``` ) ) E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo ) ) E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo Successfully customize policy | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo Successfully customize policy ) ) Successfully customize policy\nE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo ) ) E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo 5. From your session on the Test-Gateway-Endpoint instance, test access to the S3 bucket you created in Part 1: Access S3 from VPC | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo 5. From your session on the Test-Gateway-Endpoint instance, test access to the S3 bucket you created in Part 1: Access S3 from VPC ) ) 5. From your session on the Test-Gateway-Endpoint instance, test access to the S3 bucket you created in Part 1: Access S3 from VPC\nE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo | findstr /R \u0026quot;^date:\u0026quot; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo ) )\nE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho aws s3 ls s3://\u0026lt;yourbucketname\u0026gt; | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo aws s3 ls s3://\u0026lt;yourbucketname\u0026gt; ) ) aws s3 ls s3://\u0026lt;yourbucketname\u0026gt;\rE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;(\recho ``` | findstr /R \u0026#34;^date:\u0026#34; 1\u0026gt;nul if not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo ``` ) ) E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo This command will return an error because access to this bucket is not permitted by your new VPC endpoint policy: | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo This command will return an error because access to this bucket is not permitted by your new VPC endpoint policy: ) ) This command will return an error because access to this bucket is not permitted by your new VPC endpoint policy:\nE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo ) ) E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo 6. Return to your home directory on your EC2 instance cd~ | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo 6. Return to your home directory on your EC2 instance cd~ ) ) 6. Return to your home directory on your EC2 instance cd~\nE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo + Create a file fallocate -l 1G test-bucket2.xyz | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo + Create a file fallocate -l 1G test-bucket2.xyz ) )\nCreate a file fallocate -l 1G test-bucket2.xyz E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo + Copy file to 2nd bucket aws s3 cp test-bucket2.xyz s3://\u0026lt;your-2nd-bucket-name\u0026gt; | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo + Copy file to 2nd bucket aws s3 cp test-bucket2.xyz s3://\u0026lt;your-2nd-bucket-name\u0026gt; ) )\nCopy file to 2nd bucket aws s3 cp test-bucket2.xyz s3://\u0026lt;your-2nd-bucket-name\u0026gt; E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo ) ) E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo This operation succeeds because it is permitted by the VPC endpoint policy. | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo This operation succeeds because it is permitted by the VPC endpoint policy. ) ) This operation succeeds because it is permitted by the VPC endpoint policy.\nE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo ) ) E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo + Then we test access to the first bucket by copy the file to 1st bucket aws s3 cp test-bucket2.xyz s3://\u0026lt;your-1st-bucket-name\u0026gt; | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo + Then we test access to the first bucket by copy the file to 1st bucket aws s3 cp test-bucket2.xyz s3://\u0026lt;your-1st-bucket-name\u0026gt; ) )\nThen we test access to the first bucket by copy the file to 1st bucket aws s3 cp test-bucket2.xyz s3://\u0026lt;your-1st-bucket-name\u0026gt; E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo ) ) E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo This command will return an error because access to this bucket is not permitted by your new VPC endpoint policy. | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo This command will return an error because access to this bucket is not permitted by your new VPC endpoint policy. ) ) This command will return an error because access to this bucket is not permitted by your new VPC endpoint policy.\nE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo #### Part 3 Summary: | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo #### Part 3 Summary: ) )\nPart 3 Summary: E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo In this section, you created a VPC endpoint policy for Amazon S3, and used the AWS CLI to test the policy. AWS CLI actions targeted to your original S3 bucket failed because you applied a policy that only allowed access to the second bucket you created. AWS CLI actions targeted for your second bucket succeeded because the policy allowed them. These policies can be useful in situations where you need to control access to resources through VPC endpoints. | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo In this section, you created a VPC endpoint policy for Amazon S3, and used the AWS CLI to test the policy. AWS CLI actions targeted to your original S3 bucket failed because you applied a policy that only allowed access to the second bucket you created. AWS CLI actions targeted for your second bucket succeeded because the policy allowed them. These policies can be useful in situations where you need to control access to resources through VPC endpoints. ) ) In this section, you created a VPC endpoint policy for Amazon S3, and used the AWS CLI to test the policy. AWS CLI actions targeted to your original S3 bucket failed because you applied a policy that only allowed access to the second bucket you created. AWS CLI actions targeted for your second bucket succeeded because the policy allowed them. These policies can be useful in situations where you need to control access to resources through VPC endpoints.\n"
},
{
	"uri": "http://localhost:1313/workshop-template/5-workshop/5.6-cleanup/",
	"title": "",
	"tags": [],
	"description": "",
	"content": "E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo \u0026mdash; | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026mdash; ) ) E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo title : \u0026ldquo;Clean up\u0026rdquo; | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo title : \u0026ldquo;Clean up\u0026rdquo; ) ) title : \u0026ldquo;Clean up\u0026rdquo;\nE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo date : \u0026ldquo;r Sys.Date()\u0026rdquo; | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo date : \u0026ldquo;r Sys.Date()\u0026rdquo; ) ) date : \u0026ldquo;r Sys.Date()\u0026rdquo;\nE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo weight : 6 | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo weight : 6 ) ) weight : 6\nE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo chapter : false | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo chapter : false ) ) chapter : false\nE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo pre : \u0026quot; 5.6. \u0026quot; | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo pre : \u0026quot; 5.6. \u0026quot; ) ) pre : \u0026quot; 5.6. \u0026quot;\nE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo \u0026mdash; | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026mdash; ) ) E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo Congratulations on completing this workshop! | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo Congratulations on completing this workshop! ) ) Congratulations on completing this workshop!\nE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo In this workshop, you learned architecture patterns for accessing Amazon S3 without using the Public Internet. | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo In this workshop, you learned architecture patterns for accessing Amazon S3 without using the Public Internet. ) ) In this workshop, you learned architecture patterns for accessing Amazon S3 without using the Public Internet.\nE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo + By creating a gateway endpoint, you enabled direct communication between EC2 resources and Amazon S3, without traversing an Internet Gateway. | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo + By creating a gateway endpoint, you enabled direct communication between EC2 resources and Amazon S3, without traversing an Internet Gateway. ) )\nBy creating a gateway endpoint, you enabled direct communication between EC2 resources and Amazon S3, without traversing an Internet Gateway. E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo + By creating an interface endpoint you extended S3 connectivity to resources running in your on-premises data center via AWS Site-to-Site VPN or Direct Connect. | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo + By creating an interface endpoint you extended S3 connectivity to resources running in your on-premises data center via AWS Site-to-Site VPN or Direct Connect. ) )\nBy creating an interface endpoint you extended S3 connectivity to resources running in your on-premises data center via AWS Site-to-Site VPN or Direct Connect. E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo #### clean up | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo #### clean up ) )\nclean up E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo 1. Navigate to Hosted Zones on the left side of Route 53 console. Click the name of s3.us-east-1.amazonaws.com zone. Click Delete and confirm deletion by typing delete. | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo 1. Navigate to Hosted Zones on the left side of Route 53 console. Click the name of s3.us-east-1.amazonaws.com zone. Click Delete and confirm deletion by typing delete. ) )\nNavigate to Hosted Zones on the left side of Route 53 console. Click the name of s3.us-east-1.amazonaws.com zone. Click Delete and confirm deletion by typing delete. E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo ) ) E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo 2. Disassociate the Route 53 Resolver Rule - myS3Rule from \u0026ldquo;VPC Onprem\u0026rdquo; and Delete it. | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo 2. Disassociate the Route 53 Resolver Rule - myS3Rule from \u0026ldquo;VPC Onprem\u0026rdquo; and Delete it. ) ) 2. Disassociate the Route 53 Resolver Rule - myS3Rule from \u0026ldquo;VPC Onprem\u0026rdquo; and Delete it.\nE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo ) ) E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo 4. Open the CloudFormation console and delete the two CloudFormation Stacks that you created for this lab: | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo 4. Open the CloudFormation console and delete the two CloudFormation Stacks that you created for this lab: ) ) 4. Open the CloudFormation console and delete the two CloudFormation Stacks that you created for this lab:\nE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo + PLOnpremSetup | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo + PLOnpremSetup ) )\nPLOnpremSetup E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo + PLCloudSetup | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo + PLCloudSetup ) )\nPLCloudSetup E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo ) ) E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo 5. Delete S3 buckets | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo 5. Delete S3 buckets ) ) 5. Delete S3 buckets\nE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo + Open S3 console | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo + Open S3 console ) )\nOpen S3 console E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo + Choose the bucket we created for the lab, click and confirm empty. Click delete and confirm delete. | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo + Choose the bucket we created for the lab, click and confirm empty. Click delete and confirm delete. ) )\nChoose the bucket we created for the lab, click and confirm empty. Click delete and confirm delete. E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo ) ) "
},
{
	"uri": "http://localhost:1313/workshop-template/5-workshop/",
	"title": "",
	"tags": [],
	"description": "",
	"content": "E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo \u0026mdash; | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026mdash; ) ) E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo title: \u0026ldquo;Workshop\u0026rdquo; | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo title: \u0026ldquo;Workshop\u0026rdquo; ) ) title: \u0026ldquo;Workshop\u0026rdquo;\nE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo date: 2025-01-01 | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo date: 2025-01-01 ) ) date: 2025-01-01T00:00:00Z\nE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo weight: 5 | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo weight: 5 ) ) weight: 5\nE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo chapter: false | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo chapter: false ) ) chapter: false\nE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo pre: \u0026quot; 5. \u0026quot; | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo pre: \u0026quot; 5. \u0026quot; ) ) pre: \u0026quot; 5. \u0026quot;\nE:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo \u0026mdash; | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo \u0026mdash; ) ) E:\\thuctap\\report mau\\fcj-workshop-template-main\u0026gt;( echo | findstr /R \u0026ldquo;^date:\u0026rdquo; 1\u0026gt;nul\nif not errorlevel 1 (echo date: 2025-01-01T00:00:00Z ) else (echo\n"
},
{
	"uri": "http://localhost:1313/workshop-template/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "http://localhost:1313/workshop-template/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]